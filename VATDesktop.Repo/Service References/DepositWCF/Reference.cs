//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATDesktop.Repo.DepositWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DepositWCF.IDepositWCF")]
    public interface IDepositWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/DoWork", ReplyAction="http://tempuri.org/IDepositWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/DoWork", ReplyAction="http://tempuri.org/IDepositWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/DepositInsert", ReplyAction="http://tempuri.org/IDepositWCF/DepositInsertResponse")]
        string DepositInsert(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/DepositInsert", ReplyAction="http://tempuri.org/IDepositWCF/DepositInsertResponse")]
        System.Threading.Tasks.Task<string> DepositInsertAsync(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/DepositInsert2", ReplyAction="http://tempuri.org/IDepositWCF/DepositInsert2Response")]
        string DepositInsert2(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/DepositInsert2", ReplyAction="http://tempuri.org/IDepositWCF/DepositInsert2Response")]
        System.Threading.Tasks.Task<string> DepositInsert2Async(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/DepositInsertX", ReplyAction="http://tempuri.org/IDepositWCF/DepositInsertXResponse")]
        string DepositInsertX(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/DepositInsertX", ReplyAction="http://tempuri.org/IDepositWCF/DepositInsertXResponse")]
        System.Threading.Tasks.Task<string> DepositInsertXAsync(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/DepositPost", ReplyAction="http://tempuri.org/IDepositWCF/DepositPostResponse")]
        string DepositPost(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/DepositPost", ReplyAction="http://tempuri.org/IDepositWCF/DepositPostResponse")]
        System.Threading.Tasks.Task<string> DepositPostAsync(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/DepositPostX", ReplyAction="http://tempuri.org/IDepositWCF/DepositPostXResponse")]
        string DepositPostX(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/DepositPostX", ReplyAction="http://tempuri.org/IDepositWCF/DepositPostXResponse")]
        System.Threading.Tasks.Task<string> DepositPostXAsync(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/DepositUpdate", ReplyAction="http://tempuri.org/IDepositWCF/DepositUpdateResponse")]
        string DepositUpdate(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/DepositUpdate", ReplyAction="http://tempuri.org/IDepositWCF/DepositUpdateResponse")]
        System.Threading.Tasks.Task<string> DepositUpdateAsync(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/GetExcelData", ReplyAction="http://tempuri.org/IDepositWCF/GetExcelDataResponse")]
        string GetExcelData(string invoiceListwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/GetExcelData", ReplyAction="http://tempuri.org/IDepositWCF/GetExcelDataResponse")]
        System.Threading.Tasks.Task<string> GetExcelDataAsync(string invoiceListwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/ImportData", ReplyAction="http://tempuri.org/IDepositWCF/ImportDataResponse")]
        string ImportData(string dtDepositwcf, string dtVDSwcf, int branchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/ImportData", ReplyAction="http://tempuri.org/IDepositWCF/ImportDataResponse")]
        System.Threading.Tasks.Task<string> ImportDataAsync(string dtDepositwcf, string dtVDSwcf, int branchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/ImportDataSingle", ReplyAction="http://tempuri.org/IDepositWCF/ImportDataSingleResponse")]
        string ImportDataSingle(string dtDepositwcf, string dtVDSwcf, int branchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/ImportDataSingle", ReplyAction="http://tempuri.org/IDepositWCF/ImportDataSingleResponse")]
        System.Threading.Tasks.Task<string> ImportDataSingleAsync(string dtDepositwcf, string dtVDSwcf, int branchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/ReverseAmount", ReplyAction="http://tempuri.org/IDepositWCF/ReverseAmountResponse")]
        string ReverseAmount(string reverseDepositId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/ReverseAmount", ReplyAction="http://tempuri.org/IDepositWCF/ReverseAmountResponse")]
        System.Threading.Tasks.Task<string> ReverseAmountAsync(string reverseDepositId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/SaveTempVDS", ReplyAction="http://tempuri.org/IDepositWCF/SaveTempVDSResponse")]
        string SaveTempVDS(string datawcf, string BranchCode, string transactionType, string CurrentUser, int branchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/SaveTempVDS", ReplyAction="http://tempuri.org/IDepositWCF/SaveTempVDSResponse")]
        System.Threading.Tasks.Task<string> SaveTempVDSAsync(string datawcf, string BranchCode, string transactionType, string CurrentUser, int branchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/SearchVDSDT", ReplyAction="http://tempuri.org/IDepositWCF/SearchVDSDTResponse")]
        string SearchVDSDT(string DepositNumber, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/SearchVDSDT", ReplyAction="http://tempuri.org/IDepositWCF/SearchVDSDTResponse")]
        System.Threading.Tasks.Task<string> SearchVDSDTAsync(string DepositNumber, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/SelectAll", ReplyAction="http://tempuri.org/IDepositWCF/SelectAllResponse")]
        string SelectAll(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/SelectAll", ReplyAction="http://tempuri.org/IDepositWCF/SelectAllResponse")]
        System.Threading.Tasks.Task<string> SelectAllAsync(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/SelectAllList", ReplyAction="http://tempuri.org/IDepositWCF/SelectAllListResponse")]
        string SelectAllList(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/SelectAllList", ReplyAction="http://tempuri.org/IDepositWCF/SelectAllListResponse")]
        System.Threading.Tasks.Task<string> SelectAllListAsync(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/UpdateVdsComplete", ReplyAction="http://tempuri.org/IDepositWCF/UpdateVdsCompleteResponse")]
        string UpdateVdsComplete(string flag, string VdsId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositWCF/UpdateVdsComplete", ReplyAction="http://tempuri.org/IDepositWCF/UpdateVdsCompleteResponse")]
        System.Threading.Tasks.Task<string> UpdateVdsCompleteAsync(string flag, string VdsId, string connVMwcf);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDepositWCFChannel : VATDesktop.Repo.DepositWCF.IDepositWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DepositWCFClient : System.ServiceModel.ClientBase<VATDesktop.Repo.DepositWCF.IDepositWCF>, VATDesktop.Repo.DepositWCF.IDepositWCF {
        
        public DepositWCFClient() {
        }
        
        public DepositWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DepositWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepositWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepositWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string DepositInsert(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositInsert(Masterwcf, vdswcf, adjHistorywcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DepositInsertAsync(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositInsertAsync(Masterwcf, vdswcf, adjHistorywcf, connVMwcf);
        }
        
        public string DepositInsert2(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositInsert2(Masterwcf, vdswcf, adjHistorywcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DepositInsert2Async(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositInsert2Async(Masterwcf, vdswcf, adjHistorywcf, connVMwcf);
        }
        
        public string DepositInsertX(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositInsertX(Masterwcf, vdswcf, adjHistorywcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DepositInsertXAsync(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositInsertXAsync(Masterwcf, vdswcf, adjHistorywcf, connVMwcf);
        }
        
        public string DepositPost(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositPost(Masterwcf, vdswcf, adjHistorywcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DepositPostAsync(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositPostAsync(Masterwcf, vdswcf, adjHistorywcf, connVMwcf);
        }
        
        public string DepositPostX(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositPostX(Masterwcf, vdswcf, adjHistorywcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DepositPostXAsync(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositPostXAsync(Masterwcf, vdswcf, adjHistorywcf, connVMwcf);
        }
        
        public string DepositUpdate(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositUpdate(Masterwcf, vdswcf, adjHistorywcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DepositUpdateAsync(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositUpdateAsync(Masterwcf, vdswcf, adjHistorywcf, connVMwcf);
        }
        
        public string GetExcelData(string invoiceListwcf, string connVMwcf) {
            return base.Channel.GetExcelData(invoiceListwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetExcelDataAsync(string invoiceListwcf, string connVMwcf) {
            return base.Channel.GetExcelDataAsync(invoiceListwcf, connVMwcf);
        }
        
        public string ImportData(string dtDepositwcf, string dtVDSwcf, int branchId, string connVMwcf) {
            return base.Channel.ImportData(dtDepositwcf, dtVDSwcf, branchId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> ImportDataAsync(string dtDepositwcf, string dtVDSwcf, int branchId, string connVMwcf) {
            return base.Channel.ImportDataAsync(dtDepositwcf, dtVDSwcf, branchId, connVMwcf);
        }
        
        public string ImportDataSingle(string dtDepositwcf, string dtVDSwcf, int branchId, string connVMwcf) {
            return base.Channel.ImportDataSingle(dtDepositwcf, dtVDSwcf, branchId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> ImportDataSingleAsync(string dtDepositwcf, string dtVDSwcf, int branchId, string connVMwcf) {
            return base.Channel.ImportDataSingleAsync(dtDepositwcf, dtVDSwcf, branchId, connVMwcf);
        }
        
        public string ReverseAmount(string reverseDepositId, string connVMwcf) {
            return base.Channel.ReverseAmount(reverseDepositId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> ReverseAmountAsync(string reverseDepositId, string connVMwcf) {
            return base.Channel.ReverseAmountAsync(reverseDepositId, connVMwcf);
        }
        
        public string SaveTempVDS(string datawcf, string BranchCode, string transactionType, string CurrentUser, int branchId, string connVMwcf) {
            return base.Channel.SaveTempVDS(datawcf, BranchCode, transactionType, CurrentUser, branchId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SaveTempVDSAsync(string datawcf, string BranchCode, string transactionType, string CurrentUser, int branchId, string connVMwcf) {
            return base.Channel.SaveTempVDSAsync(datawcf, BranchCode, transactionType, CurrentUser, branchId, connVMwcf);
        }
        
        public string SearchVDSDT(string DepositNumber, string connVMwcf) {
            return base.Channel.SearchVDSDT(DepositNumber, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchVDSDTAsync(string DepositNumber, string connVMwcf) {
            return base.Channel.SearchVDSDTAsync(DepositNumber, connVMwcf);
        }
        
        public string SelectAll(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf) {
            return base.Channel.SelectAll(Id, conditionFieldswcf, conditionValueswcf, Dt, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllAsync(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf) {
            return base.Channel.SelectAllAsync(Id, conditionFieldswcf, conditionValueswcf, Dt, connVMwcf);
        }
        
        public string SelectAllList(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf) {
            return base.Channel.SelectAllList(Id, conditionFieldswcf, conditionValueswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllListAsync(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf) {
            return base.Channel.SelectAllListAsync(Id, conditionFieldswcf, conditionValueswcf, connVMwcf);
        }
        
        public string UpdateVdsComplete(string flag, string VdsId, string connVMwcf) {
            return base.Channel.UpdateVdsComplete(flag, VdsId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UpdateVdsCompleteAsync(string flag, string VdsId, string connVMwcf) {
            return base.Channel.UpdateVdsCompleteAsync(flag, VdsId, connVMwcf);
        }
    }
}
