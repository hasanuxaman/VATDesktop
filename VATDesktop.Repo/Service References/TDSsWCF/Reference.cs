//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATDesktop.Repo.TDSsWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TDSsWCF.ITDSsWCF")]
    public interface ITDSsWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDSsWCF/DoWork", ReplyAction="http://tempuri.org/ITDSsWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDSsWCF/DoWork", ReplyAction="http://tempuri.org/ITDSsWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDSsWCF/CurrentTDSAmount", ReplyAction="http://tempuri.org/ITDSsWCF/CurrentTDSAmountResponse")]
        string CurrentTDSAmount(string PurchaseInvoiceNo, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDSsWCF/CurrentTDSAmount", ReplyAction="http://tempuri.org/ITDSsWCF/CurrentTDSAmountResponse")]
        System.Threading.Tasks.Task<string> CurrentTDSAmountAsync(string PurchaseInvoiceNo, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDSsWCF/TDSAmount", ReplyAction="http://tempuri.org/ITDSsWCF/TDSAmountResponse")]
        string TDSAmount(string VendorID, string ReceiveDate, string TDSCode, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDSsWCF/TDSAmount", ReplyAction="http://tempuri.org/ITDSsWCF/TDSAmountResponse")]
        System.Threading.Tasks.Task<string> TDSAmountAsync(string VendorID, string ReceiveDate, string TDSCode, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDSsWCF/UpdatePurchaseTDSs", ReplyAction="http://tempuri.org/ITDSsWCF/UpdatePurchaseTDSsResponse")]
        string UpdatePurchaseTDSs(string Id, decimal TDSAmount, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDSsWCF/UpdatePurchaseTDSs", ReplyAction="http://tempuri.org/ITDSsWCF/UpdatePurchaseTDSsResponse")]
        System.Threading.Tasks.Task<string> UpdatePurchaseTDSsAsync(string Id, decimal TDSAmount, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDSsWCF/Delete", ReplyAction="http://tempuri.org/ITDSsWCF/DeleteResponse")]
        string Delete(string vmwcf, string idswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDSsWCF/Delete", ReplyAction="http://tempuri.org/ITDSsWCF/DeleteResponse")]
        System.Threading.Tasks.Task<string> DeleteAsync(string vmwcf, string idswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDSsWCF/InsertToTDSsNew", ReplyAction="http://tempuri.org/ITDSsWCF/InsertToTDSsNewResponse")]
        string InsertToTDSsNew(string vmwcf, bool BranchProfileAutoSave, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDSsWCF/InsertToTDSsNew", ReplyAction="http://tempuri.org/ITDSsWCF/InsertToTDSsNewResponse")]
        System.Threading.Tasks.Task<string> InsertToTDSsNewAsync(string vmwcf, bool BranchProfileAutoSave, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDSsWCF/SelectAll", ReplyAction="http://tempuri.org/ITDSsWCF/SelectAllResponse")]
        string SelectAll(string Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDSsWCF/SelectAll", ReplyAction="http://tempuri.org/ITDSsWCF/SelectAllResponse")]
        System.Threading.Tasks.Task<string> SelectAllAsync(string Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDSsWCF/SelectAllList", ReplyAction="http://tempuri.org/ITDSsWCF/SelectAllListResponse")]
        string SelectAllList(string Id, string conditionFieldswcf, string conditionValueswcf, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDSsWCF/SelectAllList", ReplyAction="http://tempuri.org/ITDSsWCF/SelectAllListResponse")]
        System.Threading.Tasks.Task<string> SelectAllListAsync(string Id, string conditionFieldswcf, string conditionValueswcf, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDSsWCF/UpdateToTDSsNew", ReplyAction="http://tempuri.org/ITDSsWCF/UpdateToTDSsNewResponse")]
        string UpdateToTDSsNew(string vmwcf, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITDSsWCF/UpdateToTDSsNew", ReplyAction="http://tempuri.org/ITDSsWCF/UpdateToTDSsNewResponse")]
        System.Threading.Tasks.Task<string> UpdateToTDSsNewAsync(string vmwcf, string connVMWCF);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITDSsWCFChannel : VATDesktop.Repo.TDSsWCF.ITDSsWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TDSsWCFClient : System.ServiceModel.ClientBase<VATDesktop.Repo.TDSsWCF.ITDSsWCF>, VATDesktop.Repo.TDSsWCF.ITDSsWCF {
        
        public TDSsWCFClient() {
        }
        
        public TDSsWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TDSsWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TDSsWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TDSsWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string CurrentTDSAmount(string PurchaseInvoiceNo, bool Dt, string connVMwcf) {
            return base.Channel.CurrentTDSAmount(PurchaseInvoiceNo, Dt, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> CurrentTDSAmountAsync(string PurchaseInvoiceNo, bool Dt, string connVMwcf) {
            return base.Channel.CurrentTDSAmountAsync(PurchaseInvoiceNo, Dt, connVMwcf);
        }
        
        public string TDSAmount(string VendorID, string ReceiveDate, string TDSCode, bool Dt, string connVMwcf) {
            return base.Channel.TDSAmount(VendorID, ReceiveDate, TDSCode, Dt, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> TDSAmountAsync(string VendorID, string ReceiveDate, string TDSCode, bool Dt, string connVMwcf) {
            return base.Channel.TDSAmountAsync(VendorID, ReceiveDate, TDSCode, Dt, connVMwcf);
        }
        
        public string UpdatePurchaseTDSs(string Id, decimal TDSAmount, string connVMwcf) {
            return base.Channel.UpdatePurchaseTDSs(Id, TDSAmount, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePurchaseTDSsAsync(string Id, decimal TDSAmount, string connVMwcf) {
            return base.Channel.UpdatePurchaseTDSsAsync(Id, TDSAmount, connVMwcf);
        }
        
        public string Delete(string vmwcf, string idswcf, string connVMwcf) {
            return base.Channel.Delete(vmwcf, idswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAsync(string vmwcf, string idswcf, string connVMwcf) {
            return base.Channel.DeleteAsync(vmwcf, idswcf, connVMwcf);
        }
        
        public string InsertToTDSsNew(string vmwcf, bool BranchProfileAutoSave, string connVMwcf) {
            return base.Channel.InsertToTDSsNew(vmwcf, BranchProfileAutoSave, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> InsertToTDSsNewAsync(string vmwcf, bool BranchProfileAutoSave, string connVMwcf) {
            return base.Channel.InsertToTDSsNewAsync(vmwcf, BranchProfileAutoSave, connVMwcf);
        }
        
        public string SelectAll(string Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMWCF) {
            return base.Channel.SelectAll(Id, conditionFieldswcf, conditionValueswcf, Dt, connVMWCF);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllAsync(string Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMWCF) {
            return base.Channel.SelectAllAsync(Id, conditionFieldswcf, conditionValueswcf, Dt, connVMWCF);
        }
        
        public string SelectAllList(string Id, string conditionFieldswcf, string conditionValueswcf, string connVMWCF) {
            return base.Channel.SelectAllList(Id, conditionFieldswcf, conditionValueswcf, connVMWCF);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllListAsync(string Id, string conditionFieldswcf, string conditionValueswcf, string connVMWCF) {
            return base.Channel.SelectAllListAsync(Id, conditionFieldswcf, conditionValueswcf, connVMWCF);
        }
        
        public string UpdateToTDSsNew(string vmwcf, string connVMWCF) {
            return base.Channel.UpdateToTDSsNew(vmwcf, connVMWCF);
        }
        
        public System.Threading.Tasks.Task<string> UpdateToTDSsNewAsync(string vmwcf, string connVMWCF) {
            return base.Channel.UpdateToTDSsNewAsync(vmwcf, connVMWCF);
        }
    }
}
