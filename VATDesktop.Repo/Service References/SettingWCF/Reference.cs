//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATDesktop.Repo.SettingWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SettingWCF.ISettingWCF")]
    public interface ISettingWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/DoWork", ReplyAction="http://tempuri.org/ISettingWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/DoWork", ReplyAction="http://tempuri.org/ISettingWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/DropDownAll", ReplyAction="http://tempuri.org/ISettingWCF/DropDownAllResponse")]
        string DropDownAll(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/DropDownAll", ReplyAction="http://tempuri.org/ISettingWCF/DropDownAllResponse")]
        System.Threading.Tasks.Task<string> DropDownAllAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/SelectAll", ReplyAction="http://tempuri.org/ISettingWCF/SelectAllResponse")]
        string SelectAll(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/SelectAll", ReplyAction="http://tempuri.org/ISettingWCF/SelectAllResponse")]
        System.Threading.Tasks.Task<string> SelectAllAsync(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/SearchSettings", ReplyAction="http://tempuri.org/ISettingWCF/SearchSettingsResponse")]
        string SearchSettings(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/SearchSettings", ReplyAction="http://tempuri.org/ISettingWCF/SearchSettingsResponse")]
        System.Threading.Tasks.Task<string> SearchSettingsAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/UpdateInternalIssueValue", ReplyAction="http://tempuri.org/ISettingWCF/UpdateInternalIssueValueResponse")]
        string UpdateInternalIssueValue(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/UpdateInternalIssueValue", ReplyAction="http://tempuri.org/ISettingWCF/UpdateInternalIssueValueResponse")]
        System.Threading.Tasks.Task<string> UpdateInternalIssueValueAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/settingsDataInsert", ReplyAction="http://tempuri.org/ISettingWCF/settingsDataInsertResponse")]
        string settingsDataInsert(string settingGroup, string settingName, string settingType, string settingValue, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/settingsDataInsert", ReplyAction="http://tempuri.org/ISettingWCF/settingsDataInsertResponse")]
        System.Threading.Tasks.Task<string> settingsDataInsertAsync(string settingGroup, string settingName, string settingType, string settingValue, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/UpdateCode", ReplyAction="http://tempuri.org/ISettingWCF/UpdateCodeResponse")]
        string UpdateCode(string CodeGroup, string CodeName, int LastId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/UpdateCode", ReplyAction="http://tempuri.org/ISettingWCF/UpdateCodeResponse")]
        System.Threading.Tasks.Task<string> UpdateCodeAsync(string CodeGroup, string CodeName, int LastId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/UpdateCodeGeneration", ReplyAction="http://tempuri.org/ISettingWCF/UpdateCodeGenerationResponse")]
        string UpdateCodeGeneration(int BranchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/UpdateCodeGeneration", ReplyAction="http://tempuri.org/ISettingWCF/UpdateCodeGenerationResponse")]
        System.Threading.Tasks.Task<string> UpdateCodeGenerationAsync(int BranchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/SettingsUpdate", ReplyAction="http://tempuri.org/ISettingWCF/SettingsUpdateResponse")]
        void SettingsUpdate(string companyId, int BranchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/SettingsUpdate", ReplyAction="http://tempuri.org/ISettingWCF/SettingsUpdateResponse")]
        System.Threading.Tasks.Task SettingsUpdateAsync(string companyId, int BranchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/SettingsUpdatelist", ReplyAction="http://tempuri.org/ISettingWCF/SettingsUpdatelistResponse")]
        string SettingsUpdatelist(string settingsVMwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingWCF/SettingsUpdatelist", ReplyAction="http://tempuri.org/ISettingWCF/SettingsUpdatelistResponse")]
        System.Threading.Tasks.Task<string> SettingsUpdatelistAsync(string settingsVMwcf, string connVMwcf);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISettingWCFChannel : VATDesktop.Repo.SettingWCF.ISettingWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SettingWCFClient : System.ServiceModel.ClientBase<VATDesktop.Repo.SettingWCF.ISettingWCF>, VATDesktop.Repo.SettingWCF.ISettingWCF {
        
        public SettingWCFClient() {
        }
        
        public SettingWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SettingWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SettingWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SettingWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string DropDownAll(string connVMwcf) {
            return base.Channel.DropDownAll(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DropDownAllAsync(string connVMwcf) {
            return base.Channel.DropDownAllAsync(connVMwcf);
        }
        
        public string SelectAll(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf) {
            return base.Channel.SelectAll(Id, conditionFieldswcf, conditionValueswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllAsync(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf) {
            return base.Channel.SelectAllAsync(Id, conditionFieldswcf, conditionValueswcf, connVMwcf);
        }
        
        public string SearchSettings(string connVMwcf) {
            return base.Channel.SearchSettings(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchSettingsAsync(string connVMwcf) {
            return base.Channel.SearchSettingsAsync(connVMwcf);
        }
        
        public string UpdateInternalIssueValue(string connVMwcf) {
            return base.Channel.UpdateInternalIssueValue(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UpdateInternalIssueValueAsync(string connVMwcf) {
            return base.Channel.UpdateInternalIssueValueAsync(connVMwcf);
        }
        
        public string settingsDataInsert(string settingGroup, string settingName, string settingType, string settingValue, string connVMwcf) {
            return base.Channel.settingsDataInsert(settingGroup, settingName, settingType, settingValue, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> settingsDataInsertAsync(string settingGroup, string settingName, string settingType, string settingValue, string connVMwcf) {
            return base.Channel.settingsDataInsertAsync(settingGroup, settingName, settingType, settingValue, connVMwcf);
        }
        
        public string UpdateCode(string CodeGroup, string CodeName, int LastId, string connVMwcf) {
            return base.Channel.UpdateCode(CodeGroup, CodeName, LastId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCodeAsync(string CodeGroup, string CodeName, int LastId, string connVMwcf) {
            return base.Channel.UpdateCodeAsync(CodeGroup, CodeName, LastId, connVMwcf);
        }
        
        public string UpdateCodeGeneration(int BranchId, string connVMwcf) {
            return base.Channel.UpdateCodeGeneration(BranchId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCodeGenerationAsync(int BranchId, string connVMwcf) {
            return base.Channel.UpdateCodeGenerationAsync(BranchId, connVMwcf);
        }
        
        public void SettingsUpdate(string companyId, int BranchId, string connVMwcf) {
            base.Channel.SettingsUpdate(companyId, BranchId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task SettingsUpdateAsync(string companyId, int BranchId, string connVMwcf) {
            return base.Channel.SettingsUpdateAsync(companyId, BranchId, connVMwcf);
        }
        
        public string SettingsUpdatelist(string settingsVMwcf, string connVMwcf) {
            return base.Channel.SettingsUpdatelist(settingsVMwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SettingsUpdatelistAsync(string settingsVMwcf, string connVMwcf) {
            return base.Channel.SettingsUpdatelistAsync(settingsVMwcf, connVMwcf);
        }
    }
}
