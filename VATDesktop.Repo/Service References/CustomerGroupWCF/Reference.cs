//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATDesktop.Repo.CustomerGroupWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CustomerGroupWCF.ICustomerGroupWCF")]
    public interface ICustomerGroupWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerGroupWCF/DoWork", ReplyAction="http://tempuri.org/ICustomerGroupWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerGroupWCF/DoWork", ReplyAction="http://tempuri.org/ICustomerGroupWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerGroupWCF/Delete", ReplyAction="http://tempuri.org/ICustomerGroupWCF/DeleteResponse")]
        string Delete(string vmwcf, string idswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerGroupWCF/Delete", ReplyAction="http://tempuri.org/ICustomerGroupWCF/DeleteResponse")]
        System.Threading.Tasks.Task<string> DeleteAsync(string vmwcf, string idswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerGroupWCF/DropDown", ReplyAction="http://tempuri.org/ICustomerGroupWCF/DropDownResponse")]
        string DropDown(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerGroupWCF/DropDown", ReplyAction="http://tempuri.org/ICustomerGroupWCF/DropDownResponse")]
        System.Threading.Tasks.Task<string> DropDownAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerGroupWCF/DropDownAll", ReplyAction="http://tempuri.org/ICustomerGroupWCF/DropDownAllResponse")]
        string DropDownAll(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerGroupWCF/DropDownAll", ReplyAction="http://tempuri.org/ICustomerGroupWCF/DropDownAllResponse")]
        System.Threading.Tasks.Task<string> DropDownAllAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerGroupWCF/InsertToCustomerGroupNew", ReplyAction="http://tempuri.org/ICustomerGroupWCF/InsertToCustomerGroupNewResponse")]
        string InsertToCustomerGroupNew(string vmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerGroupWCF/InsertToCustomerGroupNew", ReplyAction="http://tempuri.org/ICustomerGroupWCF/InsertToCustomerGroupNewResponse")]
        System.Threading.Tasks.Task<string> InsertToCustomerGroupNewAsync(string vmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerGroupWCF/SelectAll", ReplyAction="http://tempuri.org/ICustomerGroupWCF/SelectAllResponse")]
        string SelectAll(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerGroupWCF/SelectAll", ReplyAction="http://tempuri.org/ICustomerGroupWCF/SelectAllResponse")]
        System.Threading.Tasks.Task<string> SelectAllAsync(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerGroupWCF/SelectAllList", ReplyAction="http://tempuri.org/ICustomerGroupWCF/SelectAllListResponse")]
        string SelectAllList(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerGroupWCF/SelectAllList", ReplyAction="http://tempuri.org/ICustomerGroupWCF/SelectAllListResponse")]
        System.Threading.Tasks.Task<string> SelectAllListAsync(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerGroupWCF/UpdateToCustomerGroupNew", ReplyAction="http://tempuri.org/ICustomerGroupWCF/UpdateToCustomerGroupNewResponse")]
        string UpdateToCustomerGroupNew(string vmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerGroupWCF/UpdateToCustomerGroupNew", ReplyAction="http://tempuri.org/ICustomerGroupWCF/UpdateToCustomerGroupNewResponse")]
        System.Threading.Tasks.Task<string> UpdateToCustomerGroupNewAsync(string vmwcf, string connVMwcf);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerGroupWCFChannel : VATDesktop.Repo.CustomerGroupWCF.ICustomerGroupWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerGroupWCFClient : System.ServiceModel.ClientBase<VATDesktop.Repo.CustomerGroupWCF.ICustomerGroupWCF>, VATDesktop.Repo.CustomerGroupWCF.ICustomerGroupWCF {
        
        public CustomerGroupWCFClient() {
        }
        
        public CustomerGroupWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerGroupWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerGroupWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerGroupWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string Delete(string vmwcf, string idswcf, string connVMwcf) {
            return base.Channel.Delete(vmwcf, idswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAsync(string vmwcf, string idswcf, string connVMwcf) {
            return base.Channel.DeleteAsync(vmwcf, idswcf, connVMwcf);
        }
        
        public string DropDown(string connVMwcf) {
            return base.Channel.DropDown(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DropDownAsync(string connVMwcf) {
            return base.Channel.DropDownAsync(connVMwcf);
        }
        
        public string DropDownAll(string connVMwcf) {
            return base.Channel.DropDownAll(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DropDownAllAsync(string connVMwcf) {
            return base.Channel.DropDownAllAsync(connVMwcf);
        }
        
        public string InsertToCustomerGroupNew(string vmwcf, string connVMwcf) {
            return base.Channel.InsertToCustomerGroupNew(vmwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> InsertToCustomerGroupNewAsync(string vmwcf, string connVMwcf) {
            return base.Channel.InsertToCustomerGroupNewAsync(vmwcf, connVMwcf);
        }
        
        public string SelectAll(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf) {
            return base.Channel.SelectAll(Id, conditionFieldswcf, conditionValueswcf, Dt, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllAsync(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf) {
            return base.Channel.SelectAllAsync(Id, conditionFieldswcf, conditionValueswcf, Dt, connVMwcf);
        }
        
        public string SelectAllList(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf) {
            return base.Channel.SelectAllList(Id, conditionFieldswcf, conditionValueswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllListAsync(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf) {
            return base.Channel.SelectAllListAsync(Id, conditionFieldswcf, conditionValueswcf, connVMwcf);
        }
        
        public string UpdateToCustomerGroupNew(string vmwcf, string connVMwcf) {
            return base.Channel.UpdateToCustomerGroupNew(vmwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UpdateToCustomerGroupNewAsync(string vmwcf, string connVMwcf) {
            return base.Channel.UpdateToCustomerGroupNewAsync(vmwcf, connVMwcf);
        }
    }
}
