//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATDesktop.Repo.AdjustmentWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdjustmentWCF.IAdjustmentWCF")]
    public interface IAdjustmentWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdjustmentWCF/DoWork", ReplyAction="http://tempuri.org/IAdjustmentWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdjustmentWCF/DoWork", ReplyAction="http://tempuri.org/IAdjustmentWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdjustmentWCF/DeleteAdjustmentName", ReplyAction="http://tempuri.org/IAdjustmentWCF/DeleteAdjustmentNameResponse")]
        string DeleteAdjustmentName(string AdjId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdjustmentWCF/DeleteAdjustmentName", ReplyAction="http://tempuri.org/IAdjustmentWCF/DeleteAdjustmentNameResponse")]
        System.Threading.Tasks.Task<string> DeleteAdjustmentNameAsync(string AdjId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdjustmentWCF/DropDown", ReplyAction="http://tempuri.org/IAdjustmentWCF/DropDownResponse")]
        string DropDown(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdjustmentWCF/DropDown", ReplyAction="http://tempuri.org/IAdjustmentWCF/DropDownResponse")]
        System.Threading.Tasks.Task<string> DropDownAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdjustmentWCF/InsertAdjustmentName", ReplyAction="http://tempuri.org/IAdjustmentWCF/InsertAdjustmentNameResponse")]
        string InsertAdjustmentName(string vmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdjustmentWCF/InsertAdjustmentName", ReplyAction="http://tempuri.org/IAdjustmentWCF/InsertAdjustmentNameResponse")]
        System.Threading.Tasks.Task<string> InsertAdjustmentNameAsync(string vmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdjustmentWCF/UpdateAdjustmentName", ReplyAction="http://tempuri.org/IAdjustmentWCF/UpdateAdjustmentNameResponse")]
        string UpdateAdjustmentName(string vmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdjustmentWCF/UpdateAdjustmentName", ReplyAction="http://tempuri.org/IAdjustmentWCF/UpdateAdjustmentNameResponse")]
        System.Threading.Tasks.Task<string> UpdateAdjustmentNameAsync(string vmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdjustmentWCF/SelectAllList", ReplyAction="http://tempuri.org/IAdjustmentWCF/SelectAllListResponse")]
        string SelectAllList(string Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdjustmentWCF/SelectAllList", ReplyAction="http://tempuri.org/IAdjustmentWCF/SelectAllListResponse")]
        System.Threading.Tasks.Task<string> SelectAllListAsync(string Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdjustmentWCF/SelectAll", ReplyAction="http://tempuri.org/IAdjustmentWCF/SelectAllResponse")]
        string SelectAll(string Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdjustmentWCF/SelectAll", ReplyAction="http://tempuri.org/IAdjustmentWCF/SelectAllResponse")]
        System.Threading.Tasks.Task<string> SelectAllAsync(string Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdjustmentWCFChannel : VATDesktop.Repo.AdjustmentWCF.IAdjustmentWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdjustmentWCFClient : System.ServiceModel.ClientBase<VATDesktop.Repo.AdjustmentWCF.IAdjustmentWCF>, VATDesktop.Repo.AdjustmentWCF.IAdjustmentWCF {
        
        public AdjustmentWCFClient() {
        }
        
        public AdjustmentWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdjustmentWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdjustmentWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdjustmentWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string DeleteAdjustmentName(string AdjId, string connVMwcf) {
            return base.Channel.DeleteAdjustmentName(AdjId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAdjustmentNameAsync(string AdjId, string connVMwcf) {
            return base.Channel.DeleteAdjustmentNameAsync(AdjId, connVMwcf);
        }
        
        public string DropDown(string connVMwcf) {
            return base.Channel.DropDown(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DropDownAsync(string connVMwcf) {
            return base.Channel.DropDownAsync(connVMwcf);
        }
        
        public string InsertAdjustmentName(string vmwcf, string connVMwcf) {
            return base.Channel.InsertAdjustmentName(vmwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> InsertAdjustmentNameAsync(string vmwcf, string connVMwcf) {
            return base.Channel.InsertAdjustmentNameAsync(vmwcf, connVMwcf);
        }
        
        public string UpdateAdjustmentName(string vmwcf, string connVMwcf) {
            return base.Channel.UpdateAdjustmentName(vmwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAdjustmentNameAsync(string vmwcf, string connVMwcf) {
            return base.Channel.UpdateAdjustmentNameAsync(vmwcf, connVMwcf);
        }
        
        public string SelectAllList(string Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf) {
            return base.Channel.SelectAllList(Id, conditionFieldswcf, conditionValueswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllListAsync(string Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf) {
            return base.Channel.SelectAllListAsync(Id, conditionFieldswcf, conditionValueswcf, connVMwcf);
        }
        
        public string SelectAll(string Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf) {
            return base.Channel.SelectAll(Id, conditionFieldswcf, conditionValueswcf, Dt, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllAsync(string Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf) {
            return base.Channel.SelectAllAsync(Id, conditionFieldswcf, conditionValueswcf, Dt, connVMwcf);
        }
    }
}
