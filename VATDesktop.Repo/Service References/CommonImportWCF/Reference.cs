//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATDesktop.Repo.CommonImportWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CommonImportWCF.ICommonImportWCF")]
    public interface ICommonImportWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/DoWork", ReplyAction="http://tempuri.org/ICommonImportWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/DoWork", ReplyAction="http://tempuri.org/ICommonImportWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindVendorId", ReplyAction="http://tempuri.org/ICommonImportWCF/FindVendorIdResponse")]
        string FindVendorId(string vendorName, string vendorCode, bool AutoSave, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindVendorId", ReplyAction="http://tempuri.org/ICommonImportWCF/FindVendorIdResponse")]
        System.Threading.Tasks.Task<string> FindVendorIdAsync(string vendorName, string vendorCode, bool AutoSave, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindItemId", ReplyAction="http://tempuri.org/ICommonImportWCF/FindItemIdResponse")]
        string FindItemId(string productName, string productCode, bool AutoSave, string uom, int branchId, decimal vatRate, decimal NbrPrice, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindItemId", ReplyAction="http://tempuri.org/ICommonImportWCF/FindItemIdResponse")]
        System.Threading.Tasks.Task<string> FindItemIdAsync(string productName, string productCode, bool AutoSave, string uom, int branchId, decimal vatRate, decimal NbrPrice, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindUOMn", ReplyAction="http://tempuri.org/ICommonImportWCF/FindUOMnResponse")]
        string FindUOMn(string ItemNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindUOMn", ReplyAction="http://tempuri.org/ICommonImportWCF/FindUOMnResponse")]
        System.Threading.Tasks.Task<string> FindUOMnAsync(string ItemNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindUOMc", ReplyAction="http://tempuri.org/ICommonImportWCF/FindUOMcResponse")]
        string FindUOMc(string uomFrom, string uomTo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindUOMc", ReplyAction="http://tempuri.org/ICommonImportWCF/FindUOMcResponse")]
        System.Threading.Tasks.Task<string> FindUOMcAsync(string uomFrom, string uomTo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/CheckPrePurchaseNo", ReplyAction="http://tempuri.org/ICommonImportWCF/CheckPrePurchaseNoResponse")]
        string CheckPrePurchaseNo(string PurchaseID, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/CheckPrePurchaseNo", ReplyAction="http://tempuri.org/ICommonImportWCF/CheckPrePurchaseNoResponse")]
        System.Threading.Tasks.Task<string> CheckPrePurchaseNoAsync(string PurchaseID, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindCustomerId", ReplyAction="http://tempuri.org/ICommonImportWCF/FindCustomerIdResponse")]
        string FindCustomerId(string customerName, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindCustomerId", ReplyAction="http://tempuri.org/ICommonImportWCF/FindCustomerIdResponse")]
        System.Threading.Tasks.Task<string> FindCustomerIdAsync(string customerName, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/GetProductInfo", ReplyAction="http://tempuri.org/ICommonImportWCF/GetProductInfoResponse")]
        string GetProductInfo(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/GetProductInfo", ReplyAction="http://tempuri.org/ICommonImportWCF/GetProductInfoResponse")]
        System.Threading.Tasks.Task<string> GetProductInfoAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindCurrencyRateFromBDTForBureau", ReplyAction="http://tempuri.org/ICommonImportWCF/FindCurrencyRateFromBDTForBureauResponse")]
        string FindCurrencyRateFromBDTForBureau(string currencyId, string convertionDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindCurrencyRateFromBDTForBureau", ReplyAction="http://tempuri.org/ICommonImportWCF/FindCurrencyRateFromBDTForBureauResponse")]
        System.Threading.Tasks.Task<string> FindCurrencyRateFromBDTForBureauAsync(string currencyId, string convertionDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindSaleInvoiceNo", ReplyAction="http://tempuri.org/ICommonImportWCF/FindSaleInvoiceNoResponse")]
        string FindSaleInvoiceNo(string customerId, string invoiceNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindSaleInvoiceNo", ReplyAction="http://tempuri.org/ICommonImportWCF/FindSaleInvoiceNoResponse")]
        System.Threading.Tasks.Task<string> FindSaleInvoiceNoAsync(string customerId, string invoiceNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/CheckBankID", ReplyAction="http://tempuri.org/ICommonImportWCF/CheckBankIDResponse")]
        string CheckBankID(string BankName, string BranchName, string AccountNumber, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/CheckBankID", ReplyAction="http://tempuri.org/ICommonImportWCF/CheckBankIDResponse")]
        System.Threading.Tasks.Task<string> CheckBankIDAsync(string BankName, string BranchName, string AccountNumber, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindBranchId", ReplyAction="http://tempuri.org/ICommonImportWCF/FindBranchIdResponse")]
        string FindBranchId(string branchCode, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindBranchId", ReplyAction="http://tempuri.org/ICommonImportWCF/FindBranchIdResponse")]
        System.Threading.Tasks.Task<string> FindBranchIdAsync(string branchCode, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindLastNBRPrice", ReplyAction="http://tempuri.org/ICommonImportWCF/FindLastNBRPriceResponse")]
        string FindLastNBRPrice(string ItemNo, string VATName, string RequestDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindLastNBRPrice", ReplyAction="http://tempuri.org/ICommonImportWCF/FindLastNBRPriceResponse")]
        System.Threading.Tasks.Task<string> FindLastNBRPriceAsync(string ItemNo, string VATName, string RequestDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindAvgPrice", ReplyAction="http://tempuri.org/ICommonImportWCF/FindAvgPriceResponse")]
        string FindAvgPrice(string ItemNo, string RequestDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindAvgPrice", ReplyAction="http://tempuri.org/ICommonImportWCF/FindAvgPriceResponse")]
        System.Threading.Tasks.Task<string> FindAvgPriceAsync(string ItemNo, string RequestDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindCurrencyId", ReplyAction="http://tempuri.org/ICommonImportWCF/FindCurrencyIdResponse")]
        string FindCurrencyId(string currencyCode, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindCurrencyId", ReplyAction="http://tempuri.org/ICommonImportWCF/FindCurrencyIdResponse")]
        System.Threading.Tasks.Task<string> FindCurrencyIdAsync(string currencyCode, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindCurrencyRateFromBDT", ReplyAction="http://tempuri.org/ICommonImportWCF/FindCurrencyRateFromBDTResponse")]
        string FindCurrencyRateFromBDT(string currencyId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindCurrencyRateFromBDT", ReplyAction="http://tempuri.org/ICommonImportWCF/FindCurrencyRateFromBDTResponse")]
        System.Threading.Tasks.Task<string> FindCurrencyRateFromBDTAsync(string currencyId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindCurrencyRateBDTtoUSD", ReplyAction="http://tempuri.org/ICommonImportWCF/FindCurrencyRateBDTtoUSDResponse")]
        string FindCurrencyRateBDTtoUSD(string currencyId, string convertionDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindCurrencyRateBDTtoUSD", ReplyAction="http://tempuri.org/ICommonImportWCF/FindCurrencyRateBDTtoUSDResponse")]
        System.Threading.Tasks.Task<string> FindCurrencyRateBDTtoUSDAsync(string currencyId, string convertionDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/CheckReceiveReturnID", ReplyAction="http://tempuri.org/ICommonImportWCF/CheckReceiveReturnIDResponse")]
        string CheckReceiveReturnID(string ReturnID, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/CheckReceiveReturnID", ReplyAction="http://tempuri.org/ICommonImportWCF/CheckReceiveReturnIDResponse")]
        System.Threading.Tasks.Task<string> CheckReceiveReturnIDAsync(string ReturnID, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/CheckIssueReturnID", ReplyAction="http://tempuri.org/ICommonImportWCF/CheckIssueReturnIDResponse")]
        string CheckIssueReturnID(string ReturnID, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/CheckIssueReturnID", ReplyAction="http://tempuri.org/ICommonImportWCF/CheckIssueReturnIDResponse")]
        System.Threading.Tasks.Task<string> CheckIssueReturnIDAsync(string ReturnID, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindAvgPriceImport", ReplyAction="http://tempuri.org/ICommonImportWCF/FindAvgPriceImportResponse")]
        string FindAvgPriceImport(string itemNo, string tranDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindAvgPriceImport", ReplyAction="http://tempuri.org/ICommonImportWCF/FindAvgPriceImportResponse")]
        System.Threading.Tasks.Task<string> FindAvgPriceImportAsync(string itemNo, string tranDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindLastNBRPriceFromBOM", ReplyAction="http://tempuri.org/ICommonImportWCF/FindLastNBRPriceFromBOMResponse")]
        string FindLastNBRPriceFromBOM(string itemNo, string VatName, string effectDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindLastNBRPriceFromBOM", ReplyAction="http://tempuri.org/ICommonImportWCF/FindLastNBRPriceFromBOMResponse")]
        System.Threading.Tasks.Task<string> FindLastNBRPriceFromBOMAsync(string itemNo, string VatName, string effectDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindCustGroupID", ReplyAction="http://tempuri.org/ICommonImportWCF/FindCustGroupIDResponse")]
        string FindCustGroupID(string custGrpName, string custGrpID, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/FindCustGroupID", ReplyAction="http://tempuri.org/ICommonImportWCF/FindCustGroupIDResponse")]
        System.Threading.Tasks.Task<string> FindCustGroupIDAsync(string custGrpName, string custGrpID, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/CheckSaleImportIdExist", ReplyAction="http://tempuri.org/ICommonImportWCF/CheckSaleImportIdExistResponse")]
        string CheckSaleImportIdExist(string ImportId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonImportWCF/CheckSaleImportIdExist", ReplyAction="http://tempuri.org/ICommonImportWCF/CheckSaleImportIdExistResponse")]
        System.Threading.Tasks.Task<string> CheckSaleImportIdExistAsync(string ImportId, string connVMwcf);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommonImportWCFChannel : VATDesktop.Repo.CommonImportWCF.ICommonImportWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommonImportWCFClient : System.ServiceModel.ClientBase<VATDesktop.Repo.CommonImportWCF.ICommonImportWCF>, VATDesktop.Repo.CommonImportWCF.ICommonImportWCF {
        
        public CommonImportWCFClient() {
        }
        
        public CommonImportWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommonImportWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonImportWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonImportWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string FindVendorId(string vendorName, string vendorCode, bool AutoSave, string connVMwcf) {
            return base.Channel.FindVendorId(vendorName, vendorCode, AutoSave, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> FindVendorIdAsync(string vendorName, string vendorCode, bool AutoSave, string connVMwcf) {
            return base.Channel.FindVendorIdAsync(vendorName, vendorCode, AutoSave, connVMwcf);
        }
        
        public string FindItemId(string productName, string productCode, bool AutoSave, string uom, int branchId, decimal vatRate, decimal NbrPrice, string connVMwcf) {
            return base.Channel.FindItemId(productName, productCode, AutoSave, uom, branchId, vatRate, NbrPrice, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> FindItemIdAsync(string productName, string productCode, bool AutoSave, string uom, int branchId, decimal vatRate, decimal NbrPrice, string connVMwcf) {
            return base.Channel.FindItemIdAsync(productName, productCode, AutoSave, uom, branchId, vatRate, NbrPrice, connVMwcf);
        }
        
        public string FindUOMn(string ItemNo, string connVMwcf) {
            return base.Channel.FindUOMn(ItemNo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> FindUOMnAsync(string ItemNo, string connVMwcf) {
            return base.Channel.FindUOMnAsync(ItemNo, connVMwcf);
        }
        
        public string FindUOMc(string uomFrom, string uomTo, string connVMwcf) {
            return base.Channel.FindUOMc(uomFrom, uomTo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> FindUOMcAsync(string uomFrom, string uomTo, string connVMwcf) {
            return base.Channel.FindUOMcAsync(uomFrom, uomTo, connVMwcf);
        }
        
        public string CheckPrePurchaseNo(string PurchaseID, string connVMwcf) {
            return base.Channel.CheckPrePurchaseNo(PurchaseID, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> CheckPrePurchaseNoAsync(string PurchaseID, string connVMwcf) {
            return base.Channel.CheckPrePurchaseNoAsync(PurchaseID, connVMwcf);
        }
        
        public string FindCustomerId(string customerName, string connVMwcf) {
            return base.Channel.FindCustomerId(customerName, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> FindCustomerIdAsync(string customerName, string connVMwcf) {
            return base.Channel.FindCustomerIdAsync(customerName, connVMwcf);
        }
        
        public string GetProductInfo(string connVMwcf) {
            return base.Channel.GetProductInfo(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetProductInfoAsync(string connVMwcf) {
            return base.Channel.GetProductInfoAsync(connVMwcf);
        }
        
        public string FindCurrencyRateFromBDTForBureau(string currencyId, string convertionDate, string connVMwcf) {
            return base.Channel.FindCurrencyRateFromBDTForBureau(currencyId, convertionDate, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> FindCurrencyRateFromBDTForBureauAsync(string currencyId, string convertionDate, string connVMwcf) {
            return base.Channel.FindCurrencyRateFromBDTForBureauAsync(currencyId, convertionDate, connVMwcf);
        }
        
        public string FindSaleInvoiceNo(string customerId, string invoiceNo, string connVMwcf) {
            return base.Channel.FindSaleInvoiceNo(customerId, invoiceNo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> FindSaleInvoiceNoAsync(string customerId, string invoiceNo, string connVMwcf) {
            return base.Channel.FindSaleInvoiceNoAsync(customerId, invoiceNo, connVMwcf);
        }
        
        public string CheckBankID(string BankName, string BranchName, string AccountNumber, string connVMwcf) {
            return base.Channel.CheckBankID(BankName, BranchName, AccountNumber, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> CheckBankIDAsync(string BankName, string BranchName, string AccountNumber, string connVMwcf) {
            return base.Channel.CheckBankIDAsync(BankName, BranchName, AccountNumber, connVMwcf);
        }
        
        public string FindBranchId(string branchCode, string connVMwcf) {
            return base.Channel.FindBranchId(branchCode, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> FindBranchIdAsync(string branchCode, string connVMwcf) {
            return base.Channel.FindBranchIdAsync(branchCode, connVMwcf);
        }
        
        public string FindLastNBRPrice(string ItemNo, string VATName, string RequestDate, string connVMwcf) {
            return base.Channel.FindLastNBRPrice(ItemNo, VATName, RequestDate, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> FindLastNBRPriceAsync(string ItemNo, string VATName, string RequestDate, string connVMwcf) {
            return base.Channel.FindLastNBRPriceAsync(ItemNo, VATName, RequestDate, connVMwcf);
        }
        
        public string FindAvgPrice(string ItemNo, string RequestDate) {
            return base.Channel.FindAvgPrice(ItemNo, RequestDate);
        }
        
        public System.Threading.Tasks.Task<string> FindAvgPriceAsync(string ItemNo, string RequestDate) {
            return base.Channel.FindAvgPriceAsync(ItemNo, RequestDate);
        }
        
        public string FindCurrencyId(string currencyCode, string connVMwcf) {
            return base.Channel.FindCurrencyId(currencyCode, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> FindCurrencyIdAsync(string currencyCode, string connVMwcf) {
            return base.Channel.FindCurrencyIdAsync(currencyCode, connVMwcf);
        }
        
        public string FindCurrencyRateFromBDT(string currencyId, string connVMwcf) {
            return base.Channel.FindCurrencyRateFromBDT(currencyId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> FindCurrencyRateFromBDTAsync(string currencyId, string connVMwcf) {
            return base.Channel.FindCurrencyRateFromBDTAsync(currencyId, connVMwcf);
        }
        
        public string FindCurrencyRateBDTtoUSD(string currencyId, string convertionDate, string connVMwcf) {
            return base.Channel.FindCurrencyRateBDTtoUSD(currencyId, convertionDate, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> FindCurrencyRateBDTtoUSDAsync(string currencyId, string convertionDate, string connVMwcf) {
            return base.Channel.FindCurrencyRateBDTtoUSDAsync(currencyId, convertionDate, connVMwcf);
        }
        
        public string CheckReceiveReturnID(string ReturnID, string connVMwcf) {
            return base.Channel.CheckReceiveReturnID(ReturnID, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> CheckReceiveReturnIDAsync(string ReturnID, string connVMwcf) {
            return base.Channel.CheckReceiveReturnIDAsync(ReturnID, connVMwcf);
        }
        
        public string CheckIssueReturnID(string ReturnID, string connVMwcf) {
            return base.Channel.CheckIssueReturnID(ReturnID, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> CheckIssueReturnIDAsync(string ReturnID, string connVMwcf) {
            return base.Channel.CheckIssueReturnIDAsync(ReturnID, connVMwcf);
        }
        
        public string FindAvgPriceImport(string itemNo, string tranDate, string connVMwcf) {
            return base.Channel.FindAvgPriceImport(itemNo, tranDate, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> FindAvgPriceImportAsync(string itemNo, string tranDate, string connVMwcf) {
            return base.Channel.FindAvgPriceImportAsync(itemNo, tranDate, connVMwcf);
        }
        
        public string FindLastNBRPriceFromBOM(string itemNo, string VatName, string effectDate, string connVMwcf) {
            return base.Channel.FindLastNBRPriceFromBOM(itemNo, VatName, effectDate, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> FindLastNBRPriceFromBOMAsync(string itemNo, string VatName, string effectDate, string connVMwcf) {
            return base.Channel.FindLastNBRPriceFromBOMAsync(itemNo, VatName, effectDate, connVMwcf);
        }
        
        public string FindCustGroupID(string custGrpName, string custGrpID, string connVMwcf) {
            return base.Channel.FindCustGroupID(custGrpName, custGrpID, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> FindCustGroupIDAsync(string custGrpName, string custGrpID, string connVMwcf) {
            return base.Channel.FindCustGroupIDAsync(custGrpName, custGrpID, connVMwcf);
        }
        
        public string CheckSaleImportIdExist(string ImportId, string connVMwcf) {
            return base.Channel.CheckSaleImportIdExist(ImportId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> CheckSaleImportIdExistAsync(string ImportId, string connVMwcf) {
            return base.Channel.CheckSaleImportIdExistAsync(ImportId, connVMwcf);
        }
    }
}
