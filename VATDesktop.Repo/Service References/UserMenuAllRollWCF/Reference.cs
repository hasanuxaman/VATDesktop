//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATDesktop.Repo.UserMenuAllRollWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserMenuAllRollWCF.IUserMenuAllRollWCF")]
    public interface IUserMenuAllRollWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserMenuAllRollWCF/DoWork", ReplyAction="http://tempuri.org/IUserMenuAllRollWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserMenuAllRollWCF/DoWork", ReplyAction="http://tempuri.org/IUserMenuAllRollWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserMenuAllRollWCF/UserMenuAllRollsSettingChange", ReplyAction="http://tempuri.org/IUserMenuAllRollWCF/UserMenuAllRollsSettingChangeResponse")]
        void UserMenuAllRollsSettingChange(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserMenuAllRollWCF/UserMenuAllRollsSettingChange", ReplyAction="http://tempuri.org/IUserMenuAllRollWCF/UserMenuAllRollsSettingChangeResponse")]
        System.Threading.Tasks.Task UserMenuAllRollsSettingChangeAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserMenuAllRollWCF/UserMenuAllRollsUpdate", ReplyAction="http://tempuri.org/IUserMenuAllRollWCF/UserMenuAllRollsUpdateResponse")]
        string UserMenuAllRollsUpdate(string dtwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserMenuAllRollWCF/UserMenuAllRollsUpdate", ReplyAction="http://tempuri.org/IUserMenuAllRollWCF/UserMenuAllRollsUpdateResponse")]
        System.Threading.Tasks.Task<string> UserMenuAllRollsUpdateAsync(string dtwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserMenuAllRollWCF/UserMenuAllRollsSelectAll", ReplyAction="http://tempuri.org/IUserMenuAllRollWCF/UserMenuAllRollsSelectAllResponse")]
        string UserMenuAllRollsSelectAll(string FormID, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserMenuAllRollWCF/UserMenuAllRollsSelectAll", ReplyAction="http://tempuri.org/IUserMenuAllRollWCF/UserMenuAllRollsSelectAllResponse")]
        System.Threading.Tasks.Task<string> UserMenuAllRollsSelectAllAsync(string FormID, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserMenuAllRollWCFChannel : VATDesktop.Repo.UserMenuAllRollWCF.IUserMenuAllRollWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserMenuAllRollWCFClient : System.ServiceModel.ClientBase<VATDesktop.Repo.UserMenuAllRollWCF.IUserMenuAllRollWCF>, VATDesktop.Repo.UserMenuAllRollWCF.IUserMenuAllRollWCF {
        
        public UserMenuAllRollWCFClient() {
        }
        
        public UserMenuAllRollWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserMenuAllRollWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserMenuAllRollWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserMenuAllRollWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public void UserMenuAllRollsSettingChange(string connVMwcf) {
            base.Channel.UserMenuAllRollsSettingChange(connVMwcf);
        }
        
        public System.Threading.Tasks.Task UserMenuAllRollsSettingChangeAsync(string connVMwcf) {
            return base.Channel.UserMenuAllRollsSettingChangeAsync(connVMwcf);
        }
        
        public string UserMenuAllRollsUpdate(string dtwcf, string connVMwcf) {
            return base.Channel.UserMenuAllRollsUpdate(dtwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UserMenuAllRollsUpdateAsync(string dtwcf, string connVMwcf) {
            return base.Channel.UserMenuAllRollsUpdateAsync(dtwcf, connVMwcf);
        }
        
        public string UserMenuAllRollsSelectAll(string FormID, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf) {
            return base.Channel.UserMenuAllRollsSelectAll(FormID, conditionFieldswcf, conditionValueswcf, Dt, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UserMenuAllRollsSelectAllAsync(string FormID, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf) {
            return base.Channel.UserMenuAllRollsSelectAllAsync(FormID, conditionFieldswcf, conditionValueswcf, Dt, connVMwcf);
        }
    }
}
