//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATDesktop.Repo.PurchaseWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PurchaseWCF.IPurchaseWCF")]
    public interface IPurchaseWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/DoWork", ReplyAction="http://tempuri.org/IPurchaseWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/DoWork", ReplyAction="http://tempuri.org/IPurchaseWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SearchPurchaseDutyDTNew", ReplyAction="http://tempuri.org/IPurchaseWCF/SearchPurchaseDutyDTNewResponse")]
        string SearchPurchaseDutyDTNew(string PurchaseInvoiceNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SearchPurchaseDutyDTNew", ReplyAction="http://tempuri.org/IPurchaseWCF/SearchPurchaseDutyDTNewResponse")]
        System.Threading.Tasks.Task<string> SearchPurchaseDutyDTNewAsync(string PurchaseInvoiceNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SearchPurchaseInvoiceTracking", ReplyAction="http://tempuri.org/IPurchaseWCF/SearchPurchaseInvoiceTrackingResponse")]
        string SearchPurchaseInvoiceTracking(string purchaseInvoiceNo, string itemNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SearchPurchaseInvoiceTracking", ReplyAction="http://tempuri.org/IPurchaseWCF/SearchPurchaseInvoiceTrackingResponse")]
        System.Threading.Tasks.Task<string> SearchPurchaseInvoiceTrackingAsync(string purchaseInvoiceNo, string itemNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SelectAll", ReplyAction="http://tempuri.org/IPurchaseWCF/SelectAllResponse")]
        string SelectAll(int Id, string conditionFields, string conditionValues, string likeVM, bool Dt, string connVMwcf, bool VDSSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SelectAll", ReplyAction="http://tempuri.org/IPurchaseWCF/SelectAllResponse")]
        System.Threading.Tasks.Task<string> SelectAllAsync(int Id, string conditionFields, string conditionValues, string likeVM, bool Dt, string connVMwcf, bool VDSSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SelectPurchaseDetail", ReplyAction="http://tempuri.org/IPurchaseWCF/SelectPurchaseDetailResponse")]
        string SelectPurchaseDetail(string PurchaseInvoiceNo, string conditionFields, string conditionValues, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SelectPurchaseDetail", ReplyAction="http://tempuri.org/IPurchaseWCF/SelectPurchaseDetailResponse")]
        System.Threading.Tasks.Task<string> SelectPurchaseDetailAsync(string PurchaseInvoiceNo, string conditionFields, string conditionValues, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SelectPurchaseDetailList", ReplyAction="http://tempuri.org/IPurchaseWCF/SelectPurchaseDetailListResponse")]
        string SelectPurchaseDetailList(string PurchaseInvoiceNo, string conditionFieldswcf, string conditionValueswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SelectPurchaseDetailList", ReplyAction="http://tempuri.org/IPurchaseWCF/SelectPurchaseDetailListResponse")]
        System.Threading.Tasks.Task<string> SelectPurchaseDetailListAsync(string PurchaseInvoiceNo, string conditionFieldswcf, string conditionValueswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/PurchaseInsert", ReplyAction="http://tempuri.org/IPurchaseWCF/PurchaseInsertResponse")]
        string PurchaseInsert(string Masterwcf, string Detailswcf, string Dutieswcf, string Trackingswcf, int branchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/PurchaseInsert", ReplyAction="http://tempuri.org/IPurchaseWCF/PurchaseInsertResponse")]
        System.Threading.Tasks.Task<string> PurchaseInsertAsync(string Masterwcf, string Detailswcf, string Dutieswcf, string Trackingswcf, int branchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/PurchaseUpdate", ReplyAction="http://tempuri.org/IPurchaseWCF/PurchaseUpdateResponse")]
        string PurchaseUpdate(string Masterwcf, string Detailswcf, string Dutieswcf, string Trackingswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/PurchaseUpdate", ReplyAction="http://tempuri.org/IPurchaseWCF/PurchaseUpdateResponse")]
        System.Threading.Tasks.Task<string> PurchaseUpdateAsync(string Masterwcf, string Detailswcf, string Dutieswcf, string Trackingswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/PurchasePost", ReplyAction="http://tempuri.org/IPurchaseWCF/PurchasePostResponse")]
        string PurchasePost(string Masterwcf, string Detailswcf, string Dutieswcf, string Trackingswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/PurchasePost", ReplyAction="http://tempuri.org/IPurchaseWCF/PurchasePostResponse")]
        System.Threading.Tasks.Task<string> PurchasePostAsync(string Masterwcf, string Detailswcf, string Dutieswcf, string Trackingswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/ReturnQty", ReplyAction="http://tempuri.org/IPurchaseWCF/ReturnQtyResponse")]
        string ReturnQty(string purchaseReturnId, string itemNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/ReturnQty", ReplyAction="http://tempuri.org/IPurchaseWCF/ReturnQtyResponse")]
        System.Threading.Tasks.Task<string> ReturnQtyAsync(string purchaseReturnId, string itemNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/UpdateTDSAmount", ReplyAction="http://tempuri.org/IPurchaseWCF/UpdateTDSAmountResponse")]
        string UpdateTDSAmount(string PurchaseInvoiceNo, decimal TDSAmount, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/UpdateTDSAmount", ReplyAction="http://tempuri.org/IPurchaseWCF/UpdateTDSAmountResponse")]
        System.Threading.Tasks.Task<string> UpdateTDSAmountAsync(string PurchaseInvoiceNo, decimal TDSAmount, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/ImportData", ReplyAction="http://tempuri.org/IPurchaseWCF/ImportDataResponse")]
        string ImportData(string dtPurchaseM, string dtPurchaseD, string dtPurchaseI, string dtPurchaseT, int branchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/ImportData", ReplyAction="http://tempuri.org/IPurchaseWCF/ImportDataResponse")]
        System.Threading.Tasks.Task<string> ImportDataAsync(string dtPurchaseM, string dtPurchaseD, string dtPurchaseI, string dtPurchaseT, int branchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/DropDown", ReplyAction="http://tempuri.org/IPurchaseWCF/DropDownResponse")]
        string DropDown(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/DropDown", ReplyAction="http://tempuri.org/IPurchaseWCF/DropDownResponse")]
        System.Threading.Tasks.Task<string> DropDownAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/FindItemIdFromPurchase", ReplyAction="http://tempuri.org/IPurchaseWCF/FindItemIdFromPurchaseResponse")]
        string FindItemIdFromPurchase(string PurchaseInvoiceNo, string ItemNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/FindItemIdFromPurchase", ReplyAction="http://tempuri.org/IPurchaseWCF/FindItemIdFromPurchaseResponse")]
        System.Threading.Tasks.Task<string> FindItemIdFromPurchaseAsync(string PurchaseInvoiceNo, string ItemNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/FormatingNumeric", ReplyAction="http://tempuri.org/IPurchaseWCF/FormatingNumericResponse")]
        string FormatingNumeric(decimal value, int DecPlace, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/FormatingNumeric", ReplyAction="http://tempuri.org/IPurchaseWCF/FormatingNumericResponse")]
        System.Threading.Tasks.Task<string> FormatingNumericAsync(decimal value, int DecPlace, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/GetExcelData", ReplyAction="http://tempuri.org/IPurchaseWCF/GetExcelDataResponse")]
        string GetExcelData(string invoiceListwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/GetExcelData", ReplyAction="http://tempuri.org/IPurchaseWCF/GetExcelDataResponse")]
        System.Threading.Tasks.Task<string> GetExcelDataAsync(string invoiceListwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/GetUnProcessedCount", ReplyAction="http://tempuri.org/IPurchaseWCF/GetUnProcessedCountResponse")]
        string GetUnProcessedCount(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/GetUnProcessedCount", ReplyAction="http://tempuri.org/IPurchaseWCF/GetUnProcessedCountResponse")]
        System.Threading.Tasks.Task<string> GetUnProcessedCountAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/ImportBigData", ReplyAction="http://tempuri.org/IPurchaseWCF/ImportBigDataResponse")]
        string ImportBigData(string PurchaseDatawcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/ImportBigData", ReplyAction="http://tempuri.org/IPurchaseWCF/ImportBigDataResponse")]
        System.Threading.Tasks.Task<string> ImportBigDataAsync(string PurchaseDatawcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/ImportExcelFile", ReplyAction="http://tempuri.org/IPurchaseWCF/ImportExcelFileResponse")]
        string ImportExcelFile(string paramVMwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/ImportExcelFile", ReplyAction="http://tempuri.org/IPurchaseWCF/ImportExcelFileResponse")]
        System.Threading.Tasks.Task<string> ImportExcelFileAsync(string paramVMwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/MultiplePost", ReplyAction="http://tempuri.org/IPurchaseWCF/MultiplePostResponse")]
        string MultiplePost(string Idswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/MultiplePost", ReplyAction="http://tempuri.org/IPurchaseWCF/MultiplePostResponse")]
        System.Threading.Tasks.Task<string> MultiplePostAsync(string Idswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/PurchaseSearch", ReplyAction="http://tempuri.org/IPurchaseWCF/PurchaseSearchResponse")]
        string PurchaseSearch(int Id, string conditionFieldswcf, string conditionValueswcf, string likeVMwcf, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/PurchaseSearch", ReplyAction="http://tempuri.org/IPurchaseWCF/PurchaseSearchResponse")]
        System.Threading.Tasks.Task<string> PurchaseSearchAsync(int Id, string conditionFieldswcf, string conditionValueswcf, string likeVMwcf, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/PurchaseUpdateDuty", ReplyAction="http://tempuri.org/IPurchaseWCF/PurchaseUpdateDutyResponse")]
        string PurchaseUpdateDuty(string DtDutywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/PurchaseUpdateDuty", ReplyAction="http://tempuri.org/IPurchaseWCF/PurchaseUpdateDutyResponse")]
        System.Threading.Tasks.Task<string> PurchaseUpdateDutyAsync(string DtDutywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/RateChangePercent", ReplyAction="http://tempuri.org/IPurchaseWCF/RateChangePercentResponse")]
        string RateChangePercent(string ItemNo, decimal unitPrice, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/RateChangePercent", ReplyAction="http://tempuri.org/IPurchaseWCF/RateChangePercentResponse")]
        System.Threading.Tasks.Task<string> RateChangePercentAsync(string ItemNo, decimal unitPrice, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/RateCheck", ReplyAction="http://tempuri.org/IPurchaseWCF/RateCheckResponse")]
        string RateCheck(string VMswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/RateCheck", ReplyAction="http://tempuri.org/IPurchaseWCF/RateCheckResponse")]
        System.Threading.Tasks.Task<string> RateCheckAsync(string VMswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SaveTempPurchase", ReplyAction="http://tempuri.org/IPurchaseWCF/SaveTempPurchaseResponse")]
        string SaveTempPurchase(string data, string BranchCode, string transactionType, string CurrentUser, int branchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SaveTempPurchase", ReplyAction="http://tempuri.org/IPurchaseWCF/SaveTempPurchaseResponse")]
        System.Threading.Tasks.Task<string> SaveTempPurchaseAsync(string data, string BranchCode, string transactionType, string CurrentUser, int branchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SearchProductbyPurchaseInvoice", ReplyAction="http://tempuri.org/IPurchaseWCF/SearchProductbyPurchaseInvoiceResponse")]
        string SearchProductbyPurchaseInvoice(string purchaseInvoiceNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SearchProductbyPurchaseInvoice", ReplyAction="http://tempuri.org/IPurchaseWCF/SearchProductbyPurchaseInvoiceResponse")]
        System.Threading.Tasks.Task<string> SearchProductbyPurchaseInvoiceAsync(string purchaseInvoiceNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SearchPurchaseDutyDTDownload", ReplyAction="http://tempuri.org/IPurchaseWCF/SearchPurchaseDutyDTDownloadResponse")]
        string SearchPurchaseDutyDTDownload(string PurchaseInvoiceNo, string InvoiceDateFrom, string InvoiceDateTo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SearchPurchaseDutyDTDownload", ReplyAction="http://tempuri.org/IPurchaseWCF/SearchPurchaseDutyDTDownloadResponse")]
        System.Threading.Tasks.Task<string> SearchPurchaseDutyDTDownloadAsync(string PurchaseInvoiceNo, string InvoiceDateFrom, string InvoiceDateTo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SearchPurchaseHeaderDTNew2", ReplyAction="http://tempuri.org/IPurchaseWCF/SearchPurchaseHeaderDTNew2Response")]
        string SearchPurchaseHeaderDTNew2(string PurchaseInvoiceNo, string WithVDS, string VendorName, string VendorGroupID, string VendorGroupName, string InvoiceDateFrom, string InvoiceDateTo, string SerialNo, string T1Type, string T2Type, string BENumber, string Post, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SearchPurchaseHeaderDTNew2", ReplyAction="http://tempuri.org/IPurchaseWCF/SearchPurchaseHeaderDTNew2Response")]
        System.Threading.Tasks.Task<string> SearchPurchaseHeaderDTNew2Async(string PurchaseInvoiceNo, string WithVDS, string VendorName, string VendorGroupID, string VendorGroupName, string InvoiceDateFrom, string InvoiceDateTo, string SerialNo, string T1Type, string T2Type, string BENumber, string Post, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SelectAllList", ReplyAction="http://tempuri.org/IPurchaseWCF/SelectAllListResponse")]
        string SelectAllList(int Id, string conditionFieldswcf, string conditionValueswcf, string likeVMwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseWCF/SelectAllList", ReplyAction="http://tempuri.org/IPurchaseWCF/SelectAllListResponse")]
        System.Threading.Tasks.Task<string> SelectAllListAsync(int Id, string conditionFieldswcf, string conditionValueswcf, string likeVMwcf, string connVMwcf);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPurchaseWCFChannel : VATDesktop.Repo.PurchaseWCF.IPurchaseWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PurchaseWCFClient : System.ServiceModel.ClientBase<VATDesktop.Repo.PurchaseWCF.IPurchaseWCF>, VATDesktop.Repo.PurchaseWCF.IPurchaseWCF {
        
        public PurchaseWCFClient() {
        }
        
        public PurchaseWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PurchaseWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PurchaseWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PurchaseWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string SearchPurchaseDutyDTNew(string PurchaseInvoiceNo, string connVMwcf) {
            return base.Channel.SearchPurchaseDutyDTNew(PurchaseInvoiceNo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchPurchaseDutyDTNewAsync(string PurchaseInvoiceNo, string connVMwcf) {
            return base.Channel.SearchPurchaseDutyDTNewAsync(PurchaseInvoiceNo, connVMwcf);
        }
        
        public string SearchPurchaseInvoiceTracking(string purchaseInvoiceNo, string itemNo, string connVMwcf) {
            return base.Channel.SearchPurchaseInvoiceTracking(purchaseInvoiceNo, itemNo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchPurchaseInvoiceTrackingAsync(string purchaseInvoiceNo, string itemNo, string connVMwcf) {
            return base.Channel.SearchPurchaseInvoiceTrackingAsync(purchaseInvoiceNo, itemNo, connVMwcf);
        }
        
        public string SelectAll(int Id, string conditionFields, string conditionValues, string likeVM, bool Dt, string connVMwcf, bool VDSSearch) {
            return base.Channel.SelectAll(Id, conditionFields, conditionValues, likeVM, Dt, connVMwcf, VDSSearch);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllAsync(int Id, string conditionFields, string conditionValues, string likeVM, bool Dt, string connVMwcf, bool VDSSearch) {
            return base.Channel.SelectAllAsync(Id, conditionFields, conditionValues, likeVM, Dt, connVMwcf, VDSSearch);
        }
        
        public string SelectPurchaseDetail(string PurchaseInvoiceNo, string conditionFields, string conditionValues, bool Dt, string connVMwcf) {
            return base.Channel.SelectPurchaseDetail(PurchaseInvoiceNo, conditionFields, conditionValues, Dt, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectPurchaseDetailAsync(string PurchaseInvoiceNo, string conditionFields, string conditionValues, bool Dt, string connVMwcf) {
            return base.Channel.SelectPurchaseDetailAsync(PurchaseInvoiceNo, conditionFields, conditionValues, Dt, connVMwcf);
        }
        
        public string SelectPurchaseDetailList(string PurchaseInvoiceNo, string conditionFieldswcf, string conditionValueswcf, string connVMwcf) {
            return base.Channel.SelectPurchaseDetailList(PurchaseInvoiceNo, conditionFieldswcf, conditionValueswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectPurchaseDetailListAsync(string PurchaseInvoiceNo, string conditionFieldswcf, string conditionValueswcf, string connVMwcf) {
            return base.Channel.SelectPurchaseDetailListAsync(PurchaseInvoiceNo, conditionFieldswcf, conditionValueswcf, connVMwcf);
        }
        
        public string PurchaseInsert(string Masterwcf, string Detailswcf, string Dutieswcf, string Trackingswcf, int branchId, string connVMwcf) {
            return base.Channel.PurchaseInsert(Masterwcf, Detailswcf, Dutieswcf, Trackingswcf, branchId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> PurchaseInsertAsync(string Masterwcf, string Detailswcf, string Dutieswcf, string Trackingswcf, int branchId, string connVMwcf) {
            return base.Channel.PurchaseInsertAsync(Masterwcf, Detailswcf, Dutieswcf, Trackingswcf, branchId, connVMwcf);
        }
        
        public string PurchaseUpdate(string Masterwcf, string Detailswcf, string Dutieswcf, string Trackingswcf, string connVMwcf) {
            return base.Channel.PurchaseUpdate(Masterwcf, Detailswcf, Dutieswcf, Trackingswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> PurchaseUpdateAsync(string Masterwcf, string Detailswcf, string Dutieswcf, string Trackingswcf, string connVMwcf) {
            return base.Channel.PurchaseUpdateAsync(Masterwcf, Detailswcf, Dutieswcf, Trackingswcf, connVMwcf);
        }
        
        public string PurchasePost(string Masterwcf, string Detailswcf, string Dutieswcf, string Trackingswcf, string connVMwcf) {
            return base.Channel.PurchasePost(Masterwcf, Detailswcf, Dutieswcf, Trackingswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> PurchasePostAsync(string Masterwcf, string Detailswcf, string Dutieswcf, string Trackingswcf, string connVMwcf) {
            return base.Channel.PurchasePostAsync(Masterwcf, Detailswcf, Dutieswcf, Trackingswcf, connVMwcf);
        }
        
        public string ReturnQty(string purchaseReturnId, string itemNo, string connVMwcf) {
            return base.Channel.ReturnQty(purchaseReturnId, itemNo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> ReturnQtyAsync(string purchaseReturnId, string itemNo, string connVMwcf) {
            return base.Channel.ReturnQtyAsync(purchaseReturnId, itemNo, connVMwcf);
        }
        
        public string UpdateTDSAmount(string PurchaseInvoiceNo, decimal TDSAmount, string connVMwcf) {
            return base.Channel.UpdateTDSAmount(PurchaseInvoiceNo, TDSAmount, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UpdateTDSAmountAsync(string PurchaseInvoiceNo, decimal TDSAmount, string connVMwcf) {
            return base.Channel.UpdateTDSAmountAsync(PurchaseInvoiceNo, TDSAmount, connVMwcf);
        }
        
        public string ImportData(string dtPurchaseM, string dtPurchaseD, string dtPurchaseI, string dtPurchaseT, int branchId, string connVMwcf) {
            return base.Channel.ImportData(dtPurchaseM, dtPurchaseD, dtPurchaseI, dtPurchaseT, branchId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> ImportDataAsync(string dtPurchaseM, string dtPurchaseD, string dtPurchaseI, string dtPurchaseT, int branchId, string connVMwcf) {
            return base.Channel.ImportDataAsync(dtPurchaseM, dtPurchaseD, dtPurchaseI, dtPurchaseT, branchId, connVMwcf);
        }
        
        public string DropDown(string connVMwcf) {
            return base.Channel.DropDown(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DropDownAsync(string connVMwcf) {
            return base.Channel.DropDownAsync(connVMwcf);
        }
        
        public string FindItemIdFromPurchase(string PurchaseInvoiceNo, string ItemNo, string connVMwcf) {
            return base.Channel.FindItemIdFromPurchase(PurchaseInvoiceNo, ItemNo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> FindItemIdFromPurchaseAsync(string PurchaseInvoiceNo, string ItemNo, string connVMwcf) {
            return base.Channel.FindItemIdFromPurchaseAsync(PurchaseInvoiceNo, ItemNo, connVMwcf);
        }
        
        public string FormatingNumeric(decimal value, int DecPlace, string connVMwcf) {
            return base.Channel.FormatingNumeric(value, DecPlace, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> FormatingNumericAsync(decimal value, int DecPlace, string connVMwcf) {
            return base.Channel.FormatingNumericAsync(value, DecPlace, connVMwcf);
        }
        
        public string GetExcelData(string invoiceListwcf, string connVMwcf) {
            return base.Channel.GetExcelData(invoiceListwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetExcelDataAsync(string invoiceListwcf, string connVMwcf) {
            return base.Channel.GetExcelDataAsync(invoiceListwcf, connVMwcf);
        }
        
        public string GetUnProcessedCount(string connVMwcf) {
            return base.Channel.GetUnProcessedCount(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetUnProcessedCountAsync(string connVMwcf) {
            return base.Channel.GetUnProcessedCountAsync(connVMwcf);
        }
        
        public string ImportBigData(string PurchaseDatawcf, string connVMwcf) {
            return base.Channel.ImportBigData(PurchaseDatawcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> ImportBigDataAsync(string PurchaseDatawcf, string connVMwcf) {
            return base.Channel.ImportBigDataAsync(PurchaseDatawcf, connVMwcf);
        }
        
        public string ImportExcelFile(string paramVMwcf, string connVMwcf) {
            return base.Channel.ImportExcelFile(paramVMwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> ImportExcelFileAsync(string paramVMwcf, string connVMwcf) {
            return base.Channel.ImportExcelFileAsync(paramVMwcf, connVMwcf);
        }
        
        public string MultiplePost(string Idswcf, string connVMwcf) {
            return base.Channel.MultiplePost(Idswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> MultiplePostAsync(string Idswcf, string connVMwcf) {
            return base.Channel.MultiplePostAsync(Idswcf, connVMwcf);
        }
        
        public string PurchaseSearch(int Id, string conditionFieldswcf, string conditionValueswcf, string likeVMwcf, bool Dt, string connVMwcf) {
            return base.Channel.PurchaseSearch(Id, conditionFieldswcf, conditionValueswcf, likeVMwcf, Dt, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> PurchaseSearchAsync(int Id, string conditionFieldswcf, string conditionValueswcf, string likeVMwcf, bool Dt, string connVMwcf) {
            return base.Channel.PurchaseSearchAsync(Id, conditionFieldswcf, conditionValueswcf, likeVMwcf, Dt, connVMwcf);
        }
        
        public string PurchaseUpdateDuty(string DtDutywcf, string connVMwcf) {
            return base.Channel.PurchaseUpdateDuty(DtDutywcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> PurchaseUpdateDutyAsync(string DtDutywcf, string connVMwcf) {
            return base.Channel.PurchaseUpdateDutyAsync(DtDutywcf, connVMwcf);
        }
        
        public string RateChangePercent(string ItemNo, decimal unitPrice, string connVMwcf) {
            return base.Channel.RateChangePercent(ItemNo, unitPrice, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> RateChangePercentAsync(string ItemNo, decimal unitPrice, string connVMwcf) {
            return base.Channel.RateChangePercentAsync(ItemNo, unitPrice, connVMwcf);
        }
        
        public string RateCheck(string VMswcf, string connVMwcf) {
            return base.Channel.RateCheck(VMswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> RateCheckAsync(string VMswcf, string connVMwcf) {
            return base.Channel.RateCheckAsync(VMswcf, connVMwcf);
        }
        
        public string SaveTempPurchase(string data, string BranchCode, string transactionType, string CurrentUser, int branchId, string connVMwcf) {
            return base.Channel.SaveTempPurchase(data, BranchCode, transactionType, CurrentUser, branchId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SaveTempPurchaseAsync(string data, string BranchCode, string transactionType, string CurrentUser, int branchId, string connVMwcf) {
            return base.Channel.SaveTempPurchaseAsync(data, BranchCode, transactionType, CurrentUser, branchId, connVMwcf);
        }
        
        public string SearchProductbyPurchaseInvoice(string purchaseInvoiceNo, string connVMwcf) {
            return base.Channel.SearchProductbyPurchaseInvoice(purchaseInvoiceNo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchProductbyPurchaseInvoiceAsync(string purchaseInvoiceNo, string connVMwcf) {
            return base.Channel.SearchProductbyPurchaseInvoiceAsync(purchaseInvoiceNo, connVMwcf);
        }
        
        public string SearchPurchaseDutyDTDownload(string PurchaseInvoiceNo, string InvoiceDateFrom, string InvoiceDateTo, string connVMwcf) {
            return base.Channel.SearchPurchaseDutyDTDownload(PurchaseInvoiceNo, InvoiceDateFrom, InvoiceDateTo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchPurchaseDutyDTDownloadAsync(string PurchaseInvoiceNo, string InvoiceDateFrom, string InvoiceDateTo, string connVMwcf) {
            return base.Channel.SearchPurchaseDutyDTDownloadAsync(PurchaseInvoiceNo, InvoiceDateFrom, InvoiceDateTo, connVMwcf);
        }
        
        public string SearchPurchaseHeaderDTNew2(string PurchaseInvoiceNo, string WithVDS, string VendorName, string VendorGroupID, string VendorGroupName, string InvoiceDateFrom, string InvoiceDateTo, string SerialNo, string T1Type, string T2Type, string BENumber, string Post, string connVMwcf) {
            return base.Channel.SearchPurchaseHeaderDTNew2(PurchaseInvoiceNo, WithVDS, VendorName, VendorGroupID, VendorGroupName, InvoiceDateFrom, InvoiceDateTo, SerialNo, T1Type, T2Type, BENumber, Post, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchPurchaseHeaderDTNew2Async(string PurchaseInvoiceNo, string WithVDS, string VendorName, string VendorGroupID, string VendorGroupName, string InvoiceDateFrom, string InvoiceDateTo, string SerialNo, string T1Type, string T2Type, string BENumber, string Post, string connVMwcf) {
            return base.Channel.SearchPurchaseHeaderDTNew2Async(PurchaseInvoiceNo, WithVDS, VendorName, VendorGroupID, VendorGroupName, InvoiceDateFrom, InvoiceDateTo, SerialNo, T1Type, T2Type, BENumber, Post, connVMwcf);
        }
        
        public string SelectAllList(int Id, string conditionFieldswcf, string conditionValueswcf, string likeVMwcf, string connVMwcf) {
            return base.Channel.SelectAllList(Id, conditionFieldswcf, conditionValueswcf, likeVMwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllListAsync(int Id, string conditionFieldswcf, string conditionValueswcf, string likeVMwcf, string connVMwcf) {
            return base.Channel.SelectAllListAsync(Id, conditionFieldswcf, conditionValueswcf, likeVMwcf, connVMwcf);
        }
    }
}
