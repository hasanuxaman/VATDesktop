//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATDesktop.Repo.CompanyprofileWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CompanyprofileWCF.ICompanyprofileWCF")]
    public interface ICompanyprofileWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyprofileWCF/DoWork", ReplyAction="http://tempuri.org/ICompanyprofileWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyprofileWCF/DoWork", ReplyAction="http://tempuri.org/ICompanyprofileWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyprofileWCF/SelectAllList", ReplyAction="http://tempuri.org/ICompanyprofileWCF/SelectAllListResponse")]
        string SelectAllList(string Id, string conditionField, string conditionValue, string connection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyprofileWCF/SelectAllList", ReplyAction="http://tempuri.org/ICompanyprofileWCF/SelectAllListResponse")]
        System.Threading.Tasks.Task<string> SelectAllListAsync(string Id, string conditionField, string conditionValue, string connection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyprofileWCF/SearchCompanyProfile", ReplyAction="http://tempuri.org/ICompanyprofileWCF/SearchCompanyProfileResponse")]
        string SearchCompanyProfile(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyprofileWCF/SearchCompanyProfile", ReplyAction="http://tempuri.org/ICompanyprofileWCF/SearchCompanyProfileResponse")]
        System.Threading.Tasks.Task<string> SearchCompanyProfileAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyprofileWCF/SelectAll", ReplyAction="http://tempuri.org/ICompanyprofileWCF/SelectAllResponse")]
        string SelectAll(string Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyprofileWCF/SelectAll", ReplyAction="http://tempuri.org/ICompanyprofileWCF/SelectAllResponse")]
        System.Threading.Tasks.Task<string> SelectAllAsync(string Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyprofileWCF/UpdateCompanyProfileNew", ReplyAction="http://tempuri.org/ICompanyprofileWCF/UpdateCompanyProfileNewResponse")]
        string UpdateCompanyProfileNew(string companyProfileswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyprofileWCF/UpdateCompanyProfileNew", ReplyAction="http://tempuri.org/ICompanyprofileWCF/UpdateCompanyProfileNewResponse")]
        System.Threading.Tasks.Task<string> UpdateCompanyProfileNewAsync(string companyProfileswcf, string connVMwcf);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICompanyprofileWCFChannel : VATDesktop.Repo.CompanyprofileWCF.ICompanyprofileWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompanyprofileWCFClient : System.ServiceModel.ClientBase<VATDesktop.Repo.CompanyprofileWCF.ICompanyprofileWCF>, VATDesktop.Repo.CompanyprofileWCF.ICompanyprofileWCF {
        
        public CompanyprofileWCFClient() {
        }
        
        public CompanyprofileWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompanyprofileWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompanyprofileWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompanyprofileWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string SelectAllList(string Id, string conditionField, string conditionValue, string connection) {
            return base.Channel.SelectAllList(Id, conditionField, conditionValue, connection);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllListAsync(string Id, string conditionField, string conditionValue, string connection) {
            return base.Channel.SelectAllListAsync(Id, conditionField, conditionValue, connection);
        }
        
        public string SearchCompanyProfile(string connVMwcf) {
            return base.Channel.SearchCompanyProfile(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchCompanyProfileAsync(string connVMwcf) {
            return base.Channel.SearchCompanyProfileAsync(connVMwcf);
        }
        
        public string SelectAll(string Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf) {
            return base.Channel.SelectAll(Id, conditionFieldswcf, conditionValueswcf, Dt, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllAsync(string Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf) {
            return base.Channel.SelectAllAsync(Id, conditionFieldswcf, conditionValueswcf, Dt, connVMwcf);
        }
        
        public string UpdateCompanyProfileNew(string companyProfileswcf, string connVMwcf) {
            return base.Channel.UpdateCompanyProfileNew(companyProfileswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCompanyProfileNewAsync(string companyProfileswcf, string connVMwcf) {
            return base.Channel.UpdateCompanyProfileNewAsync(companyProfileswcf, connVMwcf);
        }
    }
}
