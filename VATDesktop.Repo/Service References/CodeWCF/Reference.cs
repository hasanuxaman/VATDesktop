//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATDesktop.Repo.CodeWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CodeWCF.ICodeWCF")]
    public interface ICodeWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICodeWCF/DoWork", ReplyAction="http://tempuri.org/ICodeWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICodeWCF/DoWork", ReplyAction="http://tempuri.org/ICodeWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICodeWCF/CodeDataInsert", ReplyAction="http://tempuri.org/ICodeWCF/CodeDataInsertResponse")]
        string CodeDataInsert(string CodeGroup, string CodeName, string prefix, string Lenth, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICodeWCF/CodeDataInsert", ReplyAction="http://tempuri.org/ICodeWCF/CodeDataInsertResponse")]
        System.Threading.Tasks.Task<string> CodeDataInsertAsync(string CodeGroup, string CodeName, string prefix, string Lenth, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICodeWCF/CodeUpdate", ReplyAction="http://tempuri.org/ICodeWCF/CodeUpdateResponse")]
        string CodeUpdate(string codeVMswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICodeWCF/CodeUpdate", ReplyAction="http://tempuri.org/ICodeWCF/CodeUpdateResponse")]
        System.Threading.Tasks.Task<string> CodeUpdateAsync(string codeVMswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICodeWCF/SearchCodes", ReplyAction="http://tempuri.org/ICodeWCF/SearchCodesResponse")]
        string SearchCodes(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICodeWCF/SearchCodes", ReplyAction="http://tempuri.org/ICodeWCF/SearchCodesResponse")]
        System.Threading.Tasks.Task<string> SearchCodesAsync(string connVMwcf);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICodeWCFChannel : VATDesktop.Repo.CodeWCF.ICodeWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CodeWCFClient : System.ServiceModel.ClientBase<VATDesktop.Repo.CodeWCF.ICodeWCF>, VATDesktop.Repo.CodeWCF.ICodeWCF {
        
        public CodeWCFClient() {
        }
        
        public CodeWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CodeWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CodeWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CodeWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string CodeDataInsert(string CodeGroup, string CodeName, string prefix, string Lenth, string connVMwcf) {
            return base.Channel.CodeDataInsert(CodeGroup, CodeName, prefix, Lenth, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> CodeDataInsertAsync(string CodeGroup, string CodeName, string prefix, string Lenth, string connVMwcf) {
            return base.Channel.CodeDataInsertAsync(CodeGroup, CodeName, prefix, Lenth, connVMwcf);
        }
        
        public string CodeUpdate(string codeVMswcf, string connVMwcf) {
            return base.Channel.CodeUpdate(codeVMswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> CodeUpdateAsync(string codeVMswcf, string connVMwcf) {
            return base.Channel.CodeUpdateAsync(codeVMswcf, connVMwcf);
        }
        
        public string SearchCodes(string connVMwcf) {
            return base.Channel.SearchCodes(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchCodesAsync(string connVMwcf) {
            return base.Channel.SearchCodesAsync(connVMwcf);
        }
    }
}
