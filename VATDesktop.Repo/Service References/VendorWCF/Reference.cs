//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATDesktop.Repo.VendorWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VendorWCF.IVendorWCF")]
    public interface IVendorWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorWCF/DoWork", ReplyAction="http://tempuri.org/IVendorWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorWCF/DoWork", ReplyAction="http://tempuri.org/IVendorWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorWCF/GetExcelData", ReplyAction="http://tempuri.org/IVendorWCF/GetExcelDataResponse")]
        string GetExcelData(string idswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorWCF/GetExcelData", ReplyAction="http://tempuri.org/IVendorWCF/GetExcelDataResponse")]
        System.Threading.Tasks.Task<string> GetExcelDataAsync(string idswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorWCF/InsertToVendorNewSQL", ReplyAction="http://tempuri.org/IVendorWCF/InsertToVendorNewSQLResponse")]
        string InsertToVendorNewSQL(string vmwcf, bool autoSave, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorWCF/InsertToVendorNewSQL", ReplyAction="http://tempuri.org/IVendorWCF/InsertToVendorNewSQLResponse")]
        System.Threading.Tasks.Task<string> InsertToVendorNewSQLAsync(string vmwcf, bool autoSave, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorWCF/UpdateVendorNewSQL", ReplyAction="http://tempuri.org/IVendorWCF/UpdateVendorNewSQLResponse")]
        string UpdateVendorNewSQL(string vmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorWCF/UpdateVendorNewSQL", ReplyAction="http://tempuri.org/IVendorWCF/UpdateVendorNewSQLResponse")]
        System.Threading.Tasks.Task<string> UpdateVendorNewSQLAsync(string vmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorWCF/DropDownAll", ReplyAction="http://tempuri.org/IVendorWCF/DropDownAllResponse")]
        string DropDownAll(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorWCF/DropDownAll", ReplyAction="http://tempuri.org/IVendorWCF/DropDownAllResponse")]
        System.Threading.Tasks.Task<string> DropDownAllAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorWCF/DropDown", ReplyAction="http://tempuri.org/IVendorWCF/DropDownResponse")]
        string DropDown(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorWCF/DropDown", ReplyAction="http://tempuri.org/IVendorWCF/DropDownResponse")]
        System.Threading.Tasks.Task<string> DropDownAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorWCF/SelectAll", ReplyAction="http://tempuri.org/IVendorWCF/SelectAllResponse")]
        string SelectAll(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorWCF/SelectAll", ReplyAction="http://tempuri.org/IVendorWCF/SelectAllResponse")]
        System.Threading.Tasks.Task<string> SelectAllAsync(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorWCF/SelectAllList", ReplyAction="http://tempuri.org/IVendorWCF/SelectAllListResponse")]
        string SelectAllList(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorWCF/SelectAllList", ReplyAction="http://tempuri.org/IVendorWCF/SelectAllListResponse")]
        System.Threading.Tasks.Task<string> SelectAllListAsync(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorWCF/Delete", ReplyAction="http://tempuri.org/IVendorWCF/DeleteResponse")]
        string Delete(string vmwcf, string idswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorWCF/Delete", ReplyAction="http://tempuri.org/IVendorWCF/DeleteResponse")]
        System.Threading.Tasks.Task<string> DeleteAsync(string vmwcf, string idswcf, string connVMwcf);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVendorWCFChannel : VATDesktop.Repo.VendorWCF.IVendorWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VendorWCFClient : System.ServiceModel.ClientBase<VATDesktop.Repo.VendorWCF.IVendorWCF>, VATDesktop.Repo.VendorWCF.IVendorWCF {
        
        public VendorWCFClient() {
        }
        
        public VendorWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VendorWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VendorWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VendorWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string GetExcelData(string idswcf, string connVMwcf) {
            return base.Channel.GetExcelData(idswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetExcelDataAsync(string idswcf, string connVMwcf) {
            return base.Channel.GetExcelDataAsync(idswcf, connVMwcf);
        }
        
        public string InsertToVendorNewSQL(string vmwcf, bool autoSave, string connVMwcf) {
            return base.Channel.InsertToVendorNewSQL(vmwcf, autoSave, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> InsertToVendorNewSQLAsync(string vmwcf, bool autoSave, string connVMwcf) {
            return base.Channel.InsertToVendorNewSQLAsync(vmwcf, autoSave, connVMwcf);
        }
        
        public string UpdateVendorNewSQL(string vmwcf, string connVMwcf) {
            return base.Channel.UpdateVendorNewSQL(vmwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UpdateVendorNewSQLAsync(string vmwcf, string connVMwcf) {
            return base.Channel.UpdateVendorNewSQLAsync(vmwcf, connVMwcf);
        }
        
        public string DropDownAll(string connVMwcf) {
            return base.Channel.DropDownAll(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DropDownAllAsync(string connVMwcf) {
            return base.Channel.DropDownAllAsync(connVMwcf);
        }
        
        public string DropDown(string connVMwcf) {
            return base.Channel.DropDown(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DropDownAsync(string connVMwcf) {
            return base.Channel.DropDownAsync(connVMwcf);
        }
        
        public string SelectAll(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf) {
            return base.Channel.SelectAll(Id, conditionFieldswcf, conditionValueswcf, Dt, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllAsync(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf) {
            return base.Channel.SelectAllAsync(Id, conditionFieldswcf, conditionValueswcf, Dt, connVMwcf);
        }
        
        public string SelectAllList(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf) {
            return base.Channel.SelectAllList(Id, conditionFieldswcf, conditionValueswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllListAsync(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf) {
            return base.Channel.SelectAllListAsync(Id, conditionFieldswcf, conditionValueswcf, connVMwcf);
        }
        
        public string Delete(string vmwcf, string idswcf, string connVMwcf) {
            return base.Channel.Delete(vmwcf, idswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAsync(string vmwcf, string idswcf, string connVMwcf) {
            return base.Channel.DeleteAsync(vmwcf, idswcf, connVMwcf);
        }
    }
}
