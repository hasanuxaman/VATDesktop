//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATDesktop.Repo.DepositTDSWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DepositTDSWCF.IDepositTDSWCF")]
    public interface IDepositTDSWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/DoWork", ReplyAction="http://tempuri.org/IDepositTDSWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/DoWork", ReplyAction="http://tempuri.org/IDepositTDSWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/DepositInsert", ReplyAction="http://tempuri.org/IDepositTDSWCF/DepositInsertResponse")]
        string DepositInsert(string Masterwcf, string tdswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/DepositInsert", ReplyAction="http://tempuri.org/IDepositTDSWCF/DepositInsertResponse")]
        System.Threading.Tasks.Task<string> DepositInsertAsync(string Masterwcf, string tdswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/DepositInsert2", ReplyAction="http://tempuri.org/IDepositTDSWCF/DepositInsert2Response")]
        string DepositInsert2(string Masterwcf, string tdswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/DepositInsert2", ReplyAction="http://tempuri.org/IDepositTDSWCF/DepositInsert2Response")]
        System.Threading.Tasks.Task<string> DepositInsert2Async(string Masterwcf, string tdswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/DepositInsertX", ReplyAction="http://tempuri.org/IDepositTDSWCF/DepositInsertXResponse")]
        string DepositInsertX(string Masterwcf, string tdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/DepositInsertX", ReplyAction="http://tempuri.org/IDepositTDSWCF/DepositInsertXResponse")]
        System.Threading.Tasks.Task<string> DepositInsertXAsync(string Masterwcf, string tdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/DepositPost", ReplyAction="http://tempuri.org/IDepositTDSWCF/DepositPostResponse")]
        string DepositPost(string Masterwcf, string tdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/DepositPost", ReplyAction="http://tempuri.org/IDepositTDSWCF/DepositPostResponse")]
        System.Threading.Tasks.Task<string> DepositPostAsync(string Masterwcf, string tdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/DepositPostX", ReplyAction="http://tempuri.org/IDepositTDSWCF/DepositPostXResponse")]
        string DepositPostX(string Masterwcf, string tdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/DepositPostX", ReplyAction="http://tempuri.org/IDepositTDSWCF/DepositPostXResponse")]
        System.Threading.Tasks.Task<string> DepositPostXAsync(string Masterwcf, string tdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/DepositUpdate", ReplyAction="http://tempuri.org/IDepositTDSWCF/DepositUpdateResponse")]
        string DepositUpdate(string Masterwcf, string tdswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/DepositUpdate", ReplyAction="http://tempuri.org/IDepositTDSWCF/DepositUpdateResponse")]
        System.Threading.Tasks.Task<string> DepositUpdateAsync(string Masterwcf, string tdswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/DepositUpdateX", ReplyAction="http://tempuri.org/IDepositTDSWCF/DepositUpdateXResponse")]
        string DepositUpdateX(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/DepositUpdateX", ReplyAction="http://tempuri.org/IDepositTDSWCF/DepositUpdateXResponse")]
        System.Threading.Tasks.Task<string> DepositUpdateXAsync(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/ImportData", ReplyAction="http://tempuri.org/IDepositTDSWCF/ImportDataResponse")]
        string ImportData(string dtDepositwcf, string dtVDSwcf, int branchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/ImportData", ReplyAction="http://tempuri.org/IDepositTDSWCF/ImportDataResponse")]
        System.Threading.Tasks.Task<string> ImportDataAsync(string dtDepositwcf, string dtVDSwcf, int branchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/ReverseAmount", ReplyAction="http://tempuri.org/IDepositTDSWCF/ReverseAmountResponse")]
        string ReverseAmount(string reverseDepositId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/ReverseAmount", ReplyAction="http://tempuri.org/IDepositTDSWCF/ReverseAmountResponse")]
        System.Threading.Tasks.Task<string> ReverseAmountAsync(string reverseDepositId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/SearchVDSDT", ReplyAction="http://tempuri.org/IDepositTDSWCF/SearchVDSDTResponse")]
        string SearchVDSDT(string DepositNumber, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/SearchVDSDT", ReplyAction="http://tempuri.org/IDepositTDSWCF/SearchVDSDTResponse")]
        System.Threading.Tasks.Task<string> SearchVDSDTAsync(string DepositNumber, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/SelectAll", ReplyAction="http://tempuri.org/IDepositTDSWCF/SelectAllResponse")]
        string SelectAll(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/SelectAll", ReplyAction="http://tempuri.org/IDepositTDSWCF/SelectAllResponse")]
        System.Threading.Tasks.Task<string> SelectAllAsync(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/SelectAllList", ReplyAction="http://tempuri.org/IDepositTDSWCF/SelectAllListResponse")]
        string SelectAllList(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/SelectAllList", ReplyAction="http://tempuri.org/IDepositTDSWCF/SelectAllListResponse")]
        System.Threading.Tasks.Task<string> SelectAllListAsync(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/UpdateVdsComplete", ReplyAction="http://tempuri.org/IDepositTDSWCF/UpdateVdsCompleteResponse")]
        string UpdateVdsComplete(string flag, string VdsId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepositTDSWCF/UpdateVdsComplete", ReplyAction="http://tempuri.org/IDepositTDSWCF/UpdateVdsCompleteResponse")]
        System.Threading.Tasks.Task<string> UpdateVdsCompleteAsync(string flag, string VdsId, string connVMwcf);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDepositTDSWCFChannel : VATDesktop.Repo.DepositTDSWCF.IDepositTDSWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DepositTDSWCFClient : System.ServiceModel.ClientBase<VATDesktop.Repo.DepositTDSWCF.IDepositTDSWCF>, VATDesktop.Repo.DepositTDSWCF.IDepositTDSWCF {
        
        public DepositTDSWCFClient() {
        }
        
        public DepositTDSWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DepositTDSWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepositTDSWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepositTDSWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string DepositInsert(string Masterwcf, string tdswcf, string connVMwcf) {
            return base.Channel.DepositInsert(Masterwcf, tdswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DepositInsertAsync(string Masterwcf, string tdswcf, string connVMwcf) {
            return base.Channel.DepositInsertAsync(Masterwcf, tdswcf, connVMwcf);
        }
        
        public string DepositInsert2(string Masterwcf, string tdswcf, string connVMwcf) {
            return base.Channel.DepositInsert2(Masterwcf, tdswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DepositInsert2Async(string Masterwcf, string tdswcf, string connVMwcf) {
            return base.Channel.DepositInsert2Async(Masterwcf, tdswcf, connVMwcf);
        }
        
        public string DepositInsertX(string Masterwcf, string tdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositInsertX(Masterwcf, tdswcf, adjHistorywcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DepositInsertXAsync(string Masterwcf, string tdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositInsertXAsync(Masterwcf, tdswcf, adjHistorywcf, connVMwcf);
        }
        
        public string DepositPost(string Masterwcf, string tdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositPost(Masterwcf, tdswcf, adjHistorywcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DepositPostAsync(string Masterwcf, string tdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositPostAsync(Masterwcf, tdswcf, adjHistorywcf, connVMwcf);
        }
        
        public string DepositPostX(string Masterwcf, string tdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositPostX(Masterwcf, tdswcf, adjHistorywcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DepositPostXAsync(string Masterwcf, string tdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositPostXAsync(Masterwcf, tdswcf, adjHistorywcf, connVMwcf);
        }
        
        public string DepositUpdate(string Masterwcf, string tdswcf, string connVMwcf) {
            return base.Channel.DepositUpdate(Masterwcf, tdswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DepositUpdateAsync(string Masterwcf, string tdswcf, string connVMwcf) {
            return base.Channel.DepositUpdateAsync(Masterwcf, tdswcf, connVMwcf);
        }
        
        public string DepositUpdateX(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositUpdateX(Masterwcf, vdswcf, adjHistorywcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DepositUpdateXAsync(string Masterwcf, string vdswcf, string adjHistorywcf, string connVMwcf) {
            return base.Channel.DepositUpdateXAsync(Masterwcf, vdswcf, adjHistorywcf, connVMwcf);
        }
        
        public string ImportData(string dtDepositwcf, string dtVDSwcf, int branchId, string connVMwcf) {
            return base.Channel.ImportData(dtDepositwcf, dtVDSwcf, branchId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> ImportDataAsync(string dtDepositwcf, string dtVDSwcf, int branchId, string connVMwcf) {
            return base.Channel.ImportDataAsync(dtDepositwcf, dtVDSwcf, branchId, connVMwcf);
        }
        
        public string ReverseAmount(string reverseDepositId, string connVMwcf) {
            return base.Channel.ReverseAmount(reverseDepositId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> ReverseAmountAsync(string reverseDepositId, string connVMwcf) {
            return base.Channel.ReverseAmountAsync(reverseDepositId, connVMwcf);
        }
        
        public string SearchVDSDT(string DepositNumber, string connVMwcf) {
            return base.Channel.SearchVDSDT(DepositNumber, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchVDSDTAsync(string DepositNumber, string connVMwcf) {
            return base.Channel.SearchVDSDTAsync(DepositNumber, connVMwcf);
        }
        
        public string SelectAll(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf) {
            return base.Channel.SelectAll(Id, conditionFieldswcf, conditionValueswcf, Dt, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllAsync(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf) {
            return base.Channel.SelectAllAsync(Id, conditionFieldswcf, conditionValueswcf, Dt, connVMwcf);
        }
        
        public string SelectAllList(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf) {
            return base.Channel.SelectAllList(Id, conditionFieldswcf, conditionValueswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllListAsync(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMwcf) {
            return base.Channel.SelectAllListAsync(Id, conditionFieldswcf, conditionValueswcf, connVMwcf);
        }
        
        public string UpdateVdsComplete(string flag, string VdsId, string connVMwcf) {
            return base.Channel.UpdateVdsComplete(flag, VdsId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UpdateVdsCompleteAsync(string flag, string VdsId, string connVMwcf) {
            return base.Channel.UpdateVdsCompleteAsync(flag, VdsId, connVMwcf);
        }
    }
}
