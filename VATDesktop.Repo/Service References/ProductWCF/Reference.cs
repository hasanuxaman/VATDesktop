//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATDesktop.Repo.ProductWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductWCF.IProductWCF")]
    public interface IProductWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/DoWork", ReplyAction="http://tempuri.org/IProductWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/DoWork", ReplyAction="http://tempuri.org/IProductWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchProductMiniDS", ReplyAction="http://tempuri.org/IProductWCF/SearchProductMiniDSResponse")]
        string SearchProductMiniDS(string ItemNo, string CategoryID, string IsRaw, string CategoryName, string ActiveStatus, string Trading, string NonStock, string ProductCode, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchProductMiniDS", ReplyAction="http://tempuri.org/IProductWCF/SearchProductMiniDSResponse")]
        System.Threading.Tasks.Task<string> SearchProductMiniDSAsync(string ItemNo, string CategoryID, string IsRaw, string CategoryName, string ActiveStatus, string Trading, string NonStock, string ProductCode, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchProductMiniDS_WithProductvm", ReplyAction="http://tempuri.org/IProductWCF/SearchProductMiniDS_WithProductvmResponse")]
        string SearchProductMiniDS_WithProductvm(string Productvmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchProductMiniDS_WithProductvm", ReplyAction="http://tempuri.org/IProductWCF/SearchProductMiniDS_WithProductvmResponse")]
        System.Threading.Tasks.Task<string> SearchProductMiniDS_WithProductvmAsync(string Productvmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/AvgPriceNew", ReplyAction="http://tempuri.org/IProductWCF/AvgPriceNewResponse")]
        string AvgPriceNew(string itemNo, string tranDate, bool isPost, bool Vat16, bool Vat17, bool transfer, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/AvgPriceNew", ReplyAction="http://tempuri.org/IProductWCF/AvgPriceNewResponse")]
        System.Threading.Tasks.Task<string> AvgPriceNewAsync(string itemNo, string tranDate, bool isPost, bool Vat16, bool Vat17, bool transfer, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SelectAll", ReplyAction="http://tempuri.org/IProductWCF/SelectAllResponse")]
        string SelectAll(string ItemNo, string conditionFieldswcf, string conditionValueswcf, string likeVMwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SelectAll", ReplyAction="http://tempuri.org/IProductWCF/SelectAllResponse")]
        System.Threading.Tasks.Task<string> SelectAllAsync(string ItemNo, string conditionFieldswcf, string conditionValueswcf, string likeVMwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetBOMReferenceNo", ReplyAction="http://tempuri.org/IProductWCF/GetBOMReferenceNoResponse")]
        string GetBOMReferenceNo(string itemNo, string VatName, string effectDate, string CustomerID, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetBOMReferenceNo", ReplyAction="http://tempuri.org/IProductWCF/GetBOMReferenceNoResponse")]
        System.Threading.Tasks.Task<string> GetBOMReferenceNoAsync(string itemNo, string VatName, string effectDate, string CustomerID, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchOverheadForBOMNew", ReplyAction="http://tempuri.org/IProductWCF/SearchOverheadForBOMNewResponse")]
        string SearchOverheadForBOMNew(string ActiveStatus, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchOverheadForBOMNew", ReplyAction="http://tempuri.org/IProductWCF/SearchOverheadForBOMNewResponse")]
        System.Threading.Tasks.Task<string> SearchOverheadForBOMNewAsync(string ActiveStatus, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchBanderolProducts", ReplyAction="http://tempuri.org/IProductWCF/SearchBanderolProductsResponse")]
        string SearchBanderolProducts(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchBanderolProducts", ReplyAction="http://tempuri.org/IProductWCF/SearchBanderolProductsResponse")]
        System.Threading.Tasks.Task<string> SearchBanderolProductsAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetLIFOPurchaseInformation", ReplyAction="http://tempuri.org/IProductWCF/GetLIFOPurchaseInformationResponse")]
        string GetLIFOPurchaseInformation(string itemNo, string receiveDate, string PurchaseInvoiceNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetLIFOPurchaseInformation", ReplyAction="http://tempuri.org/IProductWCF/GetLIFOPurchaseInformationResponse")]
        System.Threading.Tasks.Task<string> GetLIFOPurchaseInformationAsync(string itemNo, string receiveDate, string PurchaseInvoiceNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetLastNBRPriceFromBOM_VatName", ReplyAction="http://tempuri.org/IProductWCF/GetLastNBRPriceFromBOM_VatNameResponse")]
        string GetLastNBRPriceFromBOM_VatName(string itemNo, string VatName, string effectDate, string CustomerID, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetLastNBRPriceFromBOM_VatName", ReplyAction="http://tempuri.org/IProductWCF/GetLastNBRPriceFromBOM_VatNameResponse")]
        System.Threading.Tasks.Task<string> GetLastNBRPriceFromBOM_VatNameAsync(string itemNo, string VatName, string effectDate, string CustomerID, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetLastNBRPriceFromBOM", ReplyAction="http://tempuri.org/IProductWCF/GetLastNBRPriceFromBOMResponse")]
        string GetLastNBRPriceFromBOM(string itemNo, string effectDate, string CustomerID, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetLastNBRPriceFromBOM", ReplyAction="http://tempuri.org/IProductWCF/GetLastNBRPriceFromBOMResponse")]
        System.Threading.Tasks.Task<string> GetLastNBRPriceFromBOMAsync(string itemNo, string effectDate, string CustomerID, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetTransactionType", ReplyAction="http://tempuri.org/IProductWCF/GetTransactionTypeResponse")]
        string GetTransactionType(string itemNo, string effectDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetTransactionType", ReplyAction="http://tempuri.org/IProductWCF/GetTransactionTypeResponse")]
        System.Threading.Tasks.Task<string> GetTransactionTypeAsync(string itemNo, string effectDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/ProductDTByItemNo", ReplyAction="http://tempuri.org/IProductWCF/ProductDTByItemNoResponse")]
        string ProductDTByItemNo(string ItemNo, string ProductName, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/ProductDTByItemNo", ReplyAction="http://tempuri.org/IProductWCF/ProductDTByItemNoResponse")]
        System.Threading.Tasks.Task<string> ProductDTByItemNoAsync(string ItemNo, string ProductName, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SelectBOMRaw", ReplyAction="http://tempuri.org/IProductWCF/SelectBOMRawResponse")]
        string SelectBOMRaw(string itemNo, string effectDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SelectBOMRaw", ReplyAction="http://tempuri.org/IProductWCF/SelectBOMRawResponse")]
        System.Threading.Tasks.Task<string> SelectBOMRawAsync(string itemNo, string effectDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetLastVatableFromBOM", ReplyAction="http://tempuri.org/IProductWCF/GetLastVatableFromBOMResponse")]
        string GetLastVatableFromBOM(string itemNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetLastVatableFromBOM", ReplyAction="http://tempuri.org/IProductWCF/GetLastVatableFromBOMResponse")]
        System.Threading.Tasks.Task<string> GetLastVatableFromBOMAsync(string itemNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetLastTollChargeFBOMOH", ReplyAction="http://tempuri.org/IProductWCF/GetLastTollChargeFBOMOHResponse")]
        string GetLastTollChargeFBOMOH(string HeadName, string VatName, string effectDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetLastTollChargeFBOMOH", ReplyAction="http://tempuri.org/IProductWCF/GetLastTollChargeFBOMOHResponse")]
        System.Threading.Tasks.Task<string> GetLastTollChargeFBOMOHAsync(string HeadName, string VatName, string effectDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/AvgPriceForInternalSales", ReplyAction="http://tempuri.org/IProductWCF/AvgPriceForInternalSalesResponse")]
        string AvgPriceForInternalSales(string itemNo, string tranDate, bool isPost, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/AvgPriceForInternalSales", ReplyAction="http://tempuri.org/IProductWCF/AvgPriceForInternalSalesResponse")]
        System.Threading.Tasks.Task<string> AvgPriceForInternalSalesAsync(string itemNo, string tranDate, bool isPost, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/AvgPriceTender", ReplyAction="http://tempuri.org/IProductWCF/AvgPriceTenderResponse")]
        string AvgPriceTender(string ItemNo, string StartDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/AvgPriceTender", ReplyAction="http://tempuri.org/IProductWCF/AvgPriceTenderResponse")]
        System.Threading.Tasks.Task<string> AvgPriceTenderAsync(string ItemNo, string StartDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/AvgPriceVAT16", ReplyAction="http://tempuri.org/IProductWCF/AvgPriceVAT16Response")]
        string AvgPriceVAT16(string ItemNo, string StartDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/AvgPriceVAT16", ReplyAction="http://tempuri.org/IProductWCF/AvgPriceVAT16Response")]
        System.Threading.Tasks.Task<string> AvgPriceVAT16Async(string ItemNo, string StartDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/AvgPriceVAT17", ReplyAction="http://tempuri.org/IProductWCF/AvgPriceVAT17Response")]
        string AvgPriceVAT17(string ItemNo, string StartDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/AvgPriceVAT17", ReplyAction="http://tempuri.org/IProductWCF/AvgPriceVAT17Response")]
        System.Threading.Tasks.Task<string> AvgPriceVAT17Async(string ItemNo, string StartDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/Delete", ReplyAction="http://tempuri.org/IProductWCF/DeleteResponse")]
        string Delete(string vmwcf, string idswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/Delete", ReplyAction="http://tempuri.org/IProductWCF/DeleteResponse")]
        System.Threading.Tasks.Task<string> DeleteAsync(string vmwcf, string idswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/DeleteProductNames", ReplyAction="http://tempuri.org/IProductWCF/DeleteProductNamesResponse")]
        string DeleteProductNames(string itemNo, string Id, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/DeleteProductNames", ReplyAction="http://tempuri.org/IProductWCF/DeleteProductNamesResponse")]
        System.Threading.Tasks.Task<string> DeleteProductNamesAsync(string itemNo, string Id, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/DeleteToProductStock", ReplyAction="http://tempuri.org/IProductWCF/DeleteToProductStockResponse")]
        string DeleteToProductStock(string psVMwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/DeleteToProductStock", ReplyAction="http://tempuri.org/IProductWCF/DeleteToProductStockResponse")]
        System.Threading.Tasks.Task<string> DeleteToProductStockAsync(string psVMwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/DropDown", ReplyAction="http://tempuri.org/IProductWCF/DropDownResponse")]
        string DropDown(int CategoryID, string IsRaw, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/DropDown", ReplyAction="http://tempuri.org/IProductWCF/DropDownResponse")]
        System.Threading.Tasks.Task<string> DropDownAsync(int CategoryID, string IsRaw, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/DropDownAll", ReplyAction="http://tempuri.org/IProductWCF/DropDownAllResponse")]
        string DropDownAll(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/DropDownAll", ReplyAction="http://tempuri.org/IProductWCF/DropDownAllResponse")]
        System.Threading.Tasks.Task<string> DropDownAllAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/DropDownByCategory", ReplyAction="http://tempuri.org/IProductWCF/DropDownByCategoryResponse")]
        string DropDownByCategory(string catId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/DropDownByCategory", ReplyAction="http://tempuri.org/IProductWCF/DropDownByCategoryResponse")]
        System.Threading.Tasks.Task<string> DropDownByCategoryAsync(string catId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetBOM", ReplyAction="http://tempuri.org/IProductWCF/GetBOMResponse")]
        string GetBOM(string itemNo, string VatName, string effectDate, string CustomerID, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetBOM", ReplyAction="http://tempuri.org/IProductWCF/GetBOMResponse")]
        System.Threading.Tasks.Task<string> GetBOMAsync(string itemNo, string VatName, string effectDate, string CustomerID, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetBomIdFromBOM", ReplyAction="http://tempuri.org/IProductWCF/GetBomIdFromBOMResponse")]
        string GetBomIdFromBOM(string FinishItemNo, string RawItemNo, string VatName, System.DateTime effectDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetBomIdFromBOM", ReplyAction="http://tempuri.org/IProductWCF/GetBomIdFromBOMResponse")]
        System.Threading.Tasks.Task<string> GetBomIdFromBOMAsync(string FinishItemNo, string RawItemNo, string VatName, System.DateTime effectDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetExcelData", ReplyAction="http://tempuri.org/IProductWCF/GetExcelDataResponse")]
        string GetExcelData(string idswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetExcelData", ReplyAction="http://tempuri.org/IProductWCF/GetExcelDataResponse")]
        System.Threading.Tasks.Task<string> GetExcelDataAsync(string idswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetExcelProductDetails", ReplyAction="http://tempuri.org/IProductWCF/GetExcelProductDetailsResponse")]
        string GetExcelProductDetails(string idswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetExcelProductDetails", ReplyAction="http://tempuri.org/IProductWCF/GetExcelProductDetailsResponse")]
        System.Threading.Tasks.Task<string> GetExcelProductDetailsAsync(string idswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetExistingProductName", ReplyAction="http://tempuri.org/IProductWCF/GetExistingProductNameResponse")]
        string GetExistingProductName(string ProductName, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetExistingProductName", ReplyAction="http://tempuri.org/IProductWCF/GetExistingProductNameResponse")]
        System.Threading.Tasks.Task<string> GetExistingProductNameAsync(string ProductName, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetLastUseQuantityFromBOM", ReplyAction="http://tempuri.org/IProductWCF/GetLastUseQuantityFromBOMResponse")]
        string GetLastUseQuantityFromBOM(string FinishItemNo, string RawItemNo, string VatName, System.DateTime effectDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetLastUseQuantityFromBOM", ReplyAction="http://tempuri.org/IProductWCF/GetLastUseQuantityFromBOMResponse")]
        System.Threading.Tasks.Task<string> GetLastUseQuantityFromBOMAsync(string FinishItemNo, string RawItemNo, string VatName, System.DateTime effectDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetProductByType", ReplyAction="http://tempuri.org/IProductWCF/GetProductByTypeResponse")]
        string GetProductByType(string type, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetProductByType", ReplyAction="http://tempuri.org/IProductWCF/GetProductByTypeResponse")]
        System.Threading.Tasks.Task<string> GetProductByTypeAsync(string type, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetProductCodeUOMn", ReplyAction="http://tempuri.org/IProductWCF/GetProductCodeUOMnResponse")]
        string GetProductCodeUOMn(string ProductCode, string ProductGroup, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetProductCodeUOMn", ReplyAction="http://tempuri.org/IProductWCF/GetProductCodeUOMnResponse")]
        System.Threading.Tasks.Task<string> GetProductCodeUOMnAsync(string ProductCode, string ProductGroup, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetProductIdByName", ReplyAction="http://tempuri.org/IProductWCF/GetProductIdByNameResponse")]
        string GetProductIdByName(string ProductName, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetProductIdByName", ReplyAction="http://tempuri.org/IProductWCF/GetProductIdByNameResponse")]
        System.Threading.Tasks.Task<string> GetProductIdByNameAsync(string ProductName, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetProductNoByGroup", ReplyAction="http://tempuri.org/IProductWCF/GetProductNoByGroupResponse")]
        string GetProductNoByGroup(string ProductName, string ProductGroup, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetProductNoByGroup", ReplyAction="http://tempuri.org/IProductWCF/GetProductNoByGroupResponse")]
        System.Threading.Tasks.Task<string> GetProductNoByGroupAsync(string ProductName, string ProductGroup, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetProductNoByGroup_Code", ReplyAction="http://tempuri.org/IProductWCF/GetProductNoByGroup_CodeResponse")]
        string GetProductNoByGroup_Code(string ProductCode, string ProductGroup, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetProductNoByGroup_Code", ReplyAction="http://tempuri.org/IProductWCF/GetProductNoByGroup_CodeResponse")]
        System.Threading.Tasks.Task<string> GetProductNoByGroup_CodeAsync(string ProductCode, string ProductGroup, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetProductUOMc", ReplyAction="http://tempuri.org/IProductWCF/GetProductUOMcResponse")]
        string GetProductUOMc(string uomFrom, string uomTo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetProductUOMc", ReplyAction="http://tempuri.org/IProductWCF/GetProductUOMcResponse")]
        System.Threading.Tasks.Task<string> GetProductUOMcAsync(string uomFrom, string uomTo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetProductUOMn", ReplyAction="http://tempuri.org/IProductWCF/GetProductUOMnResponse")]
        string GetProductUOMn(string ProductName, string ProductGroup, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetProductUOMn", ReplyAction="http://tempuri.org/IProductWCF/GetProductUOMnResponse")]
        System.Threading.Tasks.Task<string> GetProductUOMnAsync(string ProductName, string ProductGroup, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetProductWithCostPrice", ReplyAction="http://tempuri.org/IProductWCF/GetProductWithCostPriceResponse")]
        string GetProductWithCostPrice(string productCode, string purchaseNo, string effectDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetProductWithCostPrice", ReplyAction="http://tempuri.org/IProductWCF/GetProductWithCostPriceResponse")]
        System.Threading.Tasks.Task<string> GetProductWithCostPriceAsync(string productCode, string purchaseNo, string effectDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetReconsciliationData", ReplyAction="http://tempuri.org/IProductWCF/GetReconsciliationDataResponse")]
        string GetReconsciliationData(string fromDate, string toDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/GetReconsciliationData", ReplyAction="http://tempuri.org/IProductWCF/GetReconsciliationDataResponse")]
        System.Threading.Tasks.Task<string> GetReconsciliationDataAsync(string fromDate, string toDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/InserToProductStock", ReplyAction="http://tempuri.org/IProductWCF/InserToProductStockResponse")]
        string InserToProductStock(string psVMwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/InserToProductStock", ReplyAction="http://tempuri.org/IProductWCF/InserToProductStockResponse")]
        System.Threading.Tasks.Task<string> InserToProductStockAsync(string psVMwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/InsertToProduct", ReplyAction="http://tempuri.org/IProductWCF/InsertToProductResponse")]
        string InsertToProduct(string vmwcf, string Trackingswcf, string ItemType, bool AutoSave, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/InsertToProduct", ReplyAction="http://tempuri.org/IProductWCF/InsertToProductResponse")]
        System.Threading.Tasks.Task<string> InsertToProductAsync(string vmwcf, string Trackingswcf, string ItemType, bool AutoSave, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/InsertToProductNames", ReplyAction="http://tempuri.org/IProductWCF/InsertToProductNamesResponse")]
        string InsertToProductNames(string vmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/InsertToProductNames", ReplyAction="http://tempuri.org/IProductWCF/InsertToProductNamesResponse")]
        System.Threading.Tasks.Task<string> InsertToProductNamesAsync(string vmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchByItemNo", ReplyAction="http://tempuri.org/IProductWCF/SearchByItemNoResponse")]
        string SearchByItemNo(string ItemNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchByItemNo", ReplyAction="http://tempuri.org/IProductWCF/SearchByItemNoResponse")]
        System.Threading.Tasks.Task<string> SearchByItemNoAsync(string ItemNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchChassis", ReplyAction="http://tempuri.org/IProductWCF/SearchChassisResponse")]
        string SearchChassis(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchChassis", ReplyAction="http://tempuri.org/IProductWCF/SearchChassisResponse")]
        System.Threading.Tasks.Task<string> SearchChassisAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchEngine", ReplyAction="http://tempuri.org/IProductWCF/SearchEngineResponse")]
        string SearchEngine(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchEngine", ReplyAction="http://tempuri.org/IProductWCF/SearchEngineResponse")]
        System.Threading.Tasks.Task<string> SearchEngineAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchProductbyMultipleSaleInvoice", ReplyAction="http://tempuri.org/IProductWCF/SearchProductbyMultipleSaleInvoiceResponse")]
        string SearchProductbyMultipleSaleInvoice(string SaleInvoiceNos, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchProductbyMultipleSaleInvoice", ReplyAction="http://tempuri.org/IProductWCF/SearchProductbyMultipleSaleInvoiceResponse")]
        System.Threading.Tasks.Task<string> SearchProductbyMultipleSaleInvoiceAsync(string SaleInvoiceNos, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchProductDT", ReplyAction="http://tempuri.org/IProductWCF/SearchProductDTResponse")]
        string SearchProductDT(
                    string ItemNo, 
                    string ProductName, 
                    string CategoryID, 
                    string CategoryName, 
                    string UOM, 
                    string IsRaw, 
                    string SerialNo, 
                    string HSCodeNo, 
                    string ActiveStatus, 
                    string Trading, 
                    string NonStock, 
                    string ProductCode, 
                    string databaseName, 
                    string customerId, 
                    string isvds, 
                    int BranchId, 
                    string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchProductDT", ReplyAction="http://tempuri.org/IProductWCF/SearchProductDTResponse")]
        System.Threading.Tasks.Task<string> SearchProductDTAsync(
                    string ItemNo, 
                    string ProductName, 
                    string CategoryID, 
                    string CategoryName, 
                    string UOM, 
                    string IsRaw, 
                    string SerialNo, 
                    string HSCodeNo, 
                    string ActiveStatus, 
                    string Trading, 
                    string NonStock, 
                    string ProductCode, 
                    string databaseName, 
                    string customerId, 
                    string isvds, 
                    int BranchId, 
                    string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SelectProductDTAll", ReplyAction="http://tempuri.org/IProductWCF/SelectProductDTAllResponse")]
        string SelectProductDTAll(string conditionFieldswcf, string conditionValueswcf, bool Dt, int BranchId, string databaseName, string isvds, string userBranchswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SelectProductDTAll", ReplyAction="http://tempuri.org/IProductWCF/SelectProductDTAllResponse")]
        System.Threading.Tasks.Task<string> SelectProductDTAllAsync(string conditionFieldswcf, string conditionValueswcf, bool Dt, int BranchId, string databaseName, string isvds, string userBranchswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchProductFinder", ReplyAction="http://tempuri.org/IProductWCF/SearchProductFinderResponse")]
        string SearchProductFinder(string ProductName, string ProductCode, string IsRaw, string CustomerId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchProductFinder", ReplyAction="http://tempuri.org/IProductWCF/SearchProductFinderResponse")]
        System.Threading.Tasks.Task<string> SearchProductFinderAsync(string ProductName, string ProductCode, string IsRaw, string CustomerId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchProductMiniDSDispose", ReplyAction="http://tempuri.org/IProductWCF/SearchProductMiniDSDisposeResponse")]
        string SearchProductMiniDSDispose(string purchaseNumber, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchProductMiniDSDispose", ReplyAction="http://tempuri.org/IProductWCF/SearchProductMiniDSDisposeResponse")]
        System.Threading.Tasks.Task<string> SearchProductMiniDSDisposeAsync(string purchaseNumber, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchProductNames", ReplyAction="http://tempuri.org/IProductWCF/SearchProductNamesResponse")]
        string SearchProductNames(string ItemNo, string Id, string Names, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchProductNames", ReplyAction="http://tempuri.org/IProductWCF/SearchProductNamesResponse")]
        System.Threading.Tasks.Task<string> SearchProductNamesAsync(string ItemNo, string Id, string Names, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchProductStock", ReplyAction="http://tempuri.org/IProductWCF/SearchProductStockResponse")]
        string SearchProductStock(string ItemNo, string id, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SearchProductStock", ReplyAction="http://tempuri.org/IProductWCF/SearchProductStockResponse")]
        System.Threading.Tasks.Task<string> SearchProductStockAsync(string ItemNo, string id, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SelectAllOverhead", ReplyAction="http://tempuri.org/IProductWCF/SelectAllOverheadResponse")]
        string SelectAllOverhead(string ItemNo, string conditionFieldswcf, string conditionValueswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SelectAllOverhead", ReplyAction="http://tempuri.org/IProductWCF/SelectAllOverheadResponse")]
        System.Threading.Tasks.Task<string> SelectAllOverheadAsync(string ItemNo, string conditionFieldswcf, string conditionValueswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SelectProductName", ReplyAction="http://tempuri.org/IProductWCF/SelectProductNameResponse")]
        string SelectProductName(string ItemNo, string conditionFieldswcf, string conditionValueswcf, string likeVMwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/SelectProductName", ReplyAction="http://tempuri.org/IProductWCF/SelectProductNameResponse")]
        System.Threading.Tasks.Task<string> SelectProductNameAsync(string ItemNo, string conditionFieldswcf, string conditionValueswcf, string likeVMwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/TrackingStockCheck", ReplyAction="http://tempuri.org/IProductWCF/TrackingStockCheckResponse")]
        string TrackingStockCheck(string ItemNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/TrackingStockCheck", ReplyAction="http://tempuri.org/IProductWCF/TrackingStockCheckResponse")]
        System.Threading.Tasks.Task<string> TrackingStockCheckAsync(string ItemNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/UpdateProduct", ReplyAction="http://tempuri.org/IProductWCF/UpdateProductResponse")]
        string UpdateProduct(string vmwcf, string Trackingswcf, string ItemType, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/UpdateProduct", ReplyAction="http://tempuri.org/IProductWCF/UpdateProductResponse")]
        System.Threading.Tasks.Task<string> UpdateProductAsync(string vmwcf, string Trackingswcf, string ItemType, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/UpdateToProductNames", ReplyAction="http://tempuri.org/IProductWCF/UpdateToProductNamesResponse")]
        string UpdateToProductNames(string vmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/UpdateToProductNames", ReplyAction="http://tempuri.org/IProductWCF/UpdateToProductNamesResponse")]
        System.Threading.Tasks.Task<string> UpdateToProductNamesAsync(string vmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/UpdateToProductStock", ReplyAction="http://tempuri.org/IProductWCF/UpdateToProductStockResponse")]
        string UpdateToProductStock(string psVMwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductWCF/UpdateToProductStock", ReplyAction="http://tempuri.org/IProductWCF/UpdateToProductStockResponse")]
        System.Threading.Tasks.Task<string> UpdateToProductStockAsync(string psVMwcf, string connVMwcf);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductWCFChannel : VATDesktop.Repo.ProductWCF.IProductWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductWCFClient : System.ServiceModel.ClientBase<VATDesktop.Repo.ProductWCF.IProductWCF>, VATDesktop.Repo.ProductWCF.IProductWCF {
        
        public ProductWCFClient() {
        }
        
        public ProductWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string SearchProductMiniDS(string ItemNo, string CategoryID, string IsRaw, string CategoryName, string ActiveStatus, string Trading, string NonStock, string ProductCode, string connVMwcf) {
            return base.Channel.SearchProductMiniDS(ItemNo, CategoryID, IsRaw, CategoryName, ActiveStatus, Trading, NonStock, ProductCode, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchProductMiniDSAsync(string ItemNo, string CategoryID, string IsRaw, string CategoryName, string ActiveStatus, string Trading, string NonStock, string ProductCode, string connVMwcf) {
            return base.Channel.SearchProductMiniDSAsync(ItemNo, CategoryID, IsRaw, CategoryName, ActiveStatus, Trading, NonStock, ProductCode, connVMwcf);
        }
        
        public string SearchProductMiniDS_WithProductvm(string Productvmwcf, string connVMwcf) {
            return base.Channel.SearchProductMiniDS_WithProductvm(Productvmwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchProductMiniDS_WithProductvmAsync(string Productvmwcf, string connVMwcf) {
            return base.Channel.SearchProductMiniDS_WithProductvmAsync(Productvmwcf, connVMwcf);
        }
        
        public string AvgPriceNew(string itemNo, string tranDate, bool isPost, bool Vat16, bool Vat17, bool transfer, string connVMwcf) {
            return base.Channel.AvgPriceNew(itemNo, tranDate, isPost, Vat16, Vat17, transfer, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> AvgPriceNewAsync(string itemNo, string tranDate, bool isPost, bool Vat16, bool Vat17, bool transfer, string connVMwcf) {
            return base.Channel.AvgPriceNewAsync(itemNo, tranDate, isPost, Vat16, Vat17, transfer, connVMwcf);
        }
        
        public string SelectAll(string ItemNo, string conditionFieldswcf, string conditionValueswcf, string likeVMwcf, string connVMwcf) {
            return base.Channel.SelectAll(ItemNo, conditionFieldswcf, conditionValueswcf, likeVMwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllAsync(string ItemNo, string conditionFieldswcf, string conditionValueswcf, string likeVMwcf, string connVMwcf) {
            return base.Channel.SelectAllAsync(ItemNo, conditionFieldswcf, conditionValueswcf, likeVMwcf, connVMwcf);
        }
        
        public string GetBOMReferenceNo(string itemNo, string VatName, string effectDate, string CustomerID, string connVMwcf) {
            return base.Channel.GetBOMReferenceNo(itemNo, VatName, effectDate, CustomerID, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetBOMReferenceNoAsync(string itemNo, string VatName, string effectDate, string CustomerID, string connVMwcf) {
            return base.Channel.GetBOMReferenceNoAsync(itemNo, VatName, effectDate, CustomerID, connVMwcf);
        }
        
        public string SearchOverheadForBOMNew(string ActiveStatus, string connVMwcf) {
            return base.Channel.SearchOverheadForBOMNew(ActiveStatus, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchOverheadForBOMNewAsync(string ActiveStatus, string connVMwcf) {
            return base.Channel.SearchOverheadForBOMNewAsync(ActiveStatus, connVMwcf);
        }
        
        public string SearchBanderolProducts(string connVMwcf) {
            return base.Channel.SearchBanderolProducts(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchBanderolProductsAsync(string connVMwcf) {
            return base.Channel.SearchBanderolProductsAsync(connVMwcf);
        }
        
        public string GetLIFOPurchaseInformation(string itemNo, string receiveDate, string PurchaseInvoiceNo, string connVMwcf) {
            return base.Channel.GetLIFOPurchaseInformation(itemNo, receiveDate, PurchaseInvoiceNo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetLIFOPurchaseInformationAsync(string itemNo, string receiveDate, string PurchaseInvoiceNo, string connVMwcf) {
            return base.Channel.GetLIFOPurchaseInformationAsync(itemNo, receiveDate, PurchaseInvoiceNo, connVMwcf);
        }
        
        public string GetLastNBRPriceFromBOM_VatName(string itemNo, string VatName, string effectDate, string CustomerID, string connVMwcf) {
            return base.Channel.GetLastNBRPriceFromBOM_VatName(itemNo, VatName, effectDate, CustomerID, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetLastNBRPriceFromBOM_VatNameAsync(string itemNo, string VatName, string effectDate, string CustomerID, string connVMwcf) {
            return base.Channel.GetLastNBRPriceFromBOM_VatNameAsync(itemNo, VatName, effectDate, CustomerID, connVMwcf);
        }
        
        public string GetLastNBRPriceFromBOM(string itemNo, string effectDate, string CustomerID, string connVMwcf) {
            return base.Channel.GetLastNBRPriceFromBOM(itemNo, effectDate, CustomerID, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetLastNBRPriceFromBOMAsync(string itemNo, string effectDate, string CustomerID, string connVMwcf) {
            return base.Channel.GetLastNBRPriceFromBOMAsync(itemNo, effectDate, CustomerID, connVMwcf);
        }
        
        public string GetTransactionType(string itemNo, string effectDate, string connVMwcf) {
            return base.Channel.GetTransactionType(itemNo, effectDate, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetTransactionTypeAsync(string itemNo, string effectDate, string connVMwcf) {
            return base.Channel.GetTransactionTypeAsync(itemNo, effectDate, connVMwcf);
        }
        
        public string ProductDTByItemNo(string ItemNo, string ProductName, string connVMwcf) {
            return base.Channel.ProductDTByItemNo(ItemNo, ProductName, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> ProductDTByItemNoAsync(string ItemNo, string ProductName, string connVMwcf) {
            return base.Channel.ProductDTByItemNoAsync(ItemNo, ProductName, connVMwcf);
        }
        
        public string SelectBOMRaw(string itemNo, string effectDate, string connVMwcf) {
            return base.Channel.SelectBOMRaw(itemNo, effectDate, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectBOMRawAsync(string itemNo, string effectDate, string connVMwcf) {
            return base.Channel.SelectBOMRawAsync(itemNo, effectDate, connVMwcf);
        }
        
        public string GetLastVatableFromBOM(string itemNo, string connVMwcf) {
            return base.Channel.GetLastVatableFromBOM(itemNo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetLastVatableFromBOMAsync(string itemNo, string connVMwcf) {
            return base.Channel.GetLastVatableFromBOMAsync(itemNo, connVMwcf);
        }
        
        public string GetLastTollChargeFBOMOH(string HeadName, string VatName, string effectDate, string connVMwcf) {
            return base.Channel.GetLastTollChargeFBOMOH(HeadName, VatName, effectDate, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetLastTollChargeFBOMOHAsync(string HeadName, string VatName, string effectDate, string connVMwcf) {
            return base.Channel.GetLastTollChargeFBOMOHAsync(HeadName, VatName, effectDate, connVMwcf);
        }
        
        public string AvgPriceForInternalSales(string itemNo, string tranDate, bool isPost, string connVMwcf) {
            return base.Channel.AvgPriceForInternalSales(itemNo, tranDate, isPost, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> AvgPriceForInternalSalesAsync(string itemNo, string tranDate, bool isPost, string connVMwcf) {
            return base.Channel.AvgPriceForInternalSalesAsync(itemNo, tranDate, isPost, connVMwcf);
        }
        
        public string AvgPriceTender(string ItemNo, string StartDate, string connVMwcf) {
            return base.Channel.AvgPriceTender(ItemNo, StartDate, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> AvgPriceTenderAsync(string ItemNo, string StartDate, string connVMwcf) {
            return base.Channel.AvgPriceTenderAsync(ItemNo, StartDate, connVMwcf);
        }
        
        public string AvgPriceVAT16(string ItemNo, string StartDate, string connVMwcf) {
            return base.Channel.AvgPriceVAT16(ItemNo, StartDate, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> AvgPriceVAT16Async(string ItemNo, string StartDate, string connVMwcf) {
            return base.Channel.AvgPriceVAT16Async(ItemNo, StartDate, connVMwcf);
        }
        
        public string AvgPriceVAT17(string ItemNo, string StartDate, string connVMwcf) {
            return base.Channel.AvgPriceVAT17(ItemNo, StartDate, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> AvgPriceVAT17Async(string ItemNo, string StartDate, string connVMwcf) {
            return base.Channel.AvgPriceVAT17Async(ItemNo, StartDate, connVMwcf);
        }
        
        public string Delete(string vmwcf, string idswcf, string connVMwcf) {
            return base.Channel.Delete(vmwcf, idswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAsync(string vmwcf, string idswcf, string connVMwcf) {
            return base.Channel.DeleteAsync(vmwcf, idswcf, connVMwcf);
        }
        
        public string DeleteProductNames(string itemNo, string Id, string connVMwcf) {
            return base.Channel.DeleteProductNames(itemNo, Id, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DeleteProductNamesAsync(string itemNo, string Id, string connVMwcf) {
            return base.Channel.DeleteProductNamesAsync(itemNo, Id, connVMwcf);
        }
        
        public string DeleteToProductStock(string psVMwcf, string connVMwcf) {
            return base.Channel.DeleteToProductStock(psVMwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DeleteToProductStockAsync(string psVMwcf, string connVMwcf) {
            return base.Channel.DeleteToProductStockAsync(psVMwcf, connVMwcf);
        }
        
        public string DropDown(int CategoryID, string IsRaw, string connVMwcf) {
            return base.Channel.DropDown(CategoryID, IsRaw, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DropDownAsync(int CategoryID, string IsRaw, string connVMwcf) {
            return base.Channel.DropDownAsync(CategoryID, IsRaw, connVMwcf);
        }
        
        public string DropDownAll(string connVMwcf) {
            return base.Channel.DropDownAll(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DropDownAllAsync(string connVMwcf) {
            return base.Channel.DropDownAllAsync(connVMwcf);
        }
        
        public string DropDownByCategory(string catId, string connVMwcf) {
            return base.Channel.DropDownByCategory(catId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DropDownByCategoryAsync(string catId, string connVMwcf) {
            return base.Channel.DropDownByCategoryAsync(catId, connVMwcf);
        }
        
        public string GetBOM(string itemNo, string VatName, string effectDate, string CustomerID, string connVMwcf) {
            return base.Channel.GetBOM(itemNo, VatName, effectDate, CustomerID, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetBOMAsync(string itemNo, string VatName, string effectDate, string CustomerID, string connVMwcf) {
            return base.Channel.GetBOMAsync(itemNo, VatName, effectDate, CustomerID, connVMwcf);
        }
        
        public string GetBomIdFromBOM(string FinishItemNo, string RawItemNo, string VatName, System.DateTime effectDate, string connVMwcf) {
            return base.Channel.GetBomIdFromBOM(FinishItemNo, RawItemNo, VatName, effectDate, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetBomIdFromBOMAsync(string FinishItemNo, string RawItemNo, string VatName, System.DateTime effectDate, string connVMwcf) {
            return base.Channel.GetBomIdFromBOMAsync(FinishItemNo, RawItemNo, VatName, effectDate, connVMwcf);
        }
        
        public string GetExcelData(string idswcf, string connVMwcf) {
            return base.Channel.GetExcelData(idswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetExcelDataAsync(string idswcf, string connVMwcf) {
            return base.Channel.GetExcelDataAsync(idswcf, connVMwcf);
        }
        
        public string GetExcelProductDetails(string idswcf, string connVMwcf) {
            return base.Channel.GetExcelProductDetails(idswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetExcelProductDetailsAsync(string idswcf, string connVMwcf) {
            return base.Channel.GetExcelProductDetailsAsync(idswcf, connVMwcf);
        }
        
        public string GetExistingProductName(string ProductName, string connVMwcf) {
            return base.Channel.GetExistingProductName(ProductName, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetExistingProductNameAsync(string ProductName, string connVMwcf) {
            return base.Channel.GetExistingProductNameAsync(ProductName, connVMwcf);
        }
        
        public string GetLastUseQuantityFromBOM(string FinishItemNo, string RawItemNo, string VatName, System.DateTime effectDate, string connVMwcf) {
            return base.Channel.GetLastUseQuantityFromBOM(FinishItemNo, RawItemNo, VatName, effectDate, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetLastUseQuantityFromBOMAsync(string FinishItemNo, string RawItemNo, string VatName, System.DateTime effectDate, string connVMwcf) {
            return base.Channel.GetLastUseQuantityFromBOMAsync(FinishItemNo, RawItemNo, VatName, effectDate, connVMwcf);
        }
        
        public string GetProductByType(string type, string connVMwcf) {
            return base.Channel.GetProductByType(type, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetProductByTypeAsync(string type, string connVMwcf) {
            return base.Channel.GetProductByTypeAsync(type, connVMwcf);
        }
        
        public string GetProductCodeUOMn(string ProductCode, string ProductGroup, string connVMwcf) {
            return base.Channel.GetProductCodeUOMn(ProductCode, ProductGroup, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetProductCodeUOMnAsync(string ProductCode, string ProductGroup, string connVMwcf) {
            return base.Channel.GetProductCodeUOMnAsync(ProductCode, ProductGroup, connVMwcf);
        }
        
        public string GetProductIdByName(string ProductName, string connVMwcf) {
            return base.Channel.GetProductIdByName(ProductName, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetProductIdByNameAsync(string ProductName, string connVMwcf) {
            return base.Channel.GetProductIdByNameAsync(ProductName, connVMwcf);
        }
        
        public string GetProductNoByGroup(string ProductName, string ProductGroup, string connVMwcf) {
            return base.Channel.GetProductNoByGroup(ProductName, ProductGroup, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetProductNoByGroupAsync(string ProductName, string ProductGroup, string connVMwcf) {
            return base.Channel.GetProductNoByGroupAsync(ProductName, ProductGroup, connVMwcf);
        }
        
        public string GetProductNoByGroup_Code(string ProductCode, string ProductGroup, string connVMwcf) {
            return base.Channel.GetProductNoByGroup_Code(ProductCode, ProductGroup, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetProductNoByGroup_CodeAsync(string ProductCode, string ProductGroup, string connVMwcf) {
            return base.Channel.GetProductNoByGroup_CodeAsync(ProductCode, ProductGroup, connVMwcf);
        }
        
        public string GetProductUOMc(string uomFrom, string uomTo, string connVMwcf) {
            return base.Channel.GetProductUOMc(uomFrom, uomTo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetProductUOMcAsync(string uomFrom, string uomTo, string connVMwcf) {
            return base.Channel.GetProductUOMcAsync(uomFrom, uomTo, connVMwcf);
        }
        
        public string GetProductUOMn(string ProductName, string ProductGroup, string connVMwcf) {
            return base.Channel.GetProductUOMn(ProductName, ProductGroup, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetProductUOMnAsync(string ProductName, string ProductGroup, string connVMwcf) {
            return base.Channel.GetProductUOMnAsync(ProductName, ProductGroup, connVMwcf);
        }
        
        public string GetProductWithCostPrice(string productCode, string purchaseNo, string effectDate) {
            return base.Channel.GetProductWithCostPrice(productCode, purchaseNo, effectDate);
        }
        
        public System.Threading.Tasks.Task<string> GetProductWithCostPriceAsync(string productCode, string purchaseNo, string effectDate) {
            return base.Channel.GetProductWithCostPriceAsync(productCode, purchaseNo, effectDate);
        }
        
        public string GetReconsciliationData(string fromDate, string toDate, string connVMwcf) {
            return base.Channel.GetReconsciliationData(fromDate, toDate, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetReconsciliationDataAsync(string fromDate, string toDate, string connVMwcf) {
            return base.Channel.GetReconsciliationDataAsync(fromDate, toDate, connVMwcf);
        }
        
        public string InserToProductStock(string psVMwcf, string connVMwcf) {
            return base.Channel.InserToProductStock(psVMwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> InserToProductStockAsync(string psVMwcf, string connVMwcf) {
            return base.Channel.InserToProductStockAsync(psVMwcf, connVMwcf);
        }
        
        public string InsertToProduct(string vmwcf, string Trackingswcf, string ItemType, bool AutoSave, string connVMwcf) {
            return base.Channel.InsertToProduct(vmwcf, Trackingswcf, ItemType, AutoSave, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> InsertToProductAsync(string vmwcf, string Trackingswcf, string ItemType, bool AutoSave, string connVMwcf) {
            return base.Channel.InsertToProductAsync(vmwcf, Trackingswcf, ItemType, AutoSave, connVMwcf);
        }
        
        public string InsertToProductNames(string vmwcf, string connVMwcf) {
            return base.Channel.InsertToProductNames(vmwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> InsertToProductNamesAsync(string vmwcf, string connVMwcf) {
            return base.Channel.InsertToProductNamesAsync(vmwcf, connVMwcf);
        }
        
        public string SearchByItemNo(string ItemNo, string connVMwcf) {
            return base.Channel.SearchByItemNo(ItemNo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchByItemNoAsync(string ItemNo, string connVMwcf) {
            return base.Channel.SearchByItemNoAsync(ItemNo, connVMwcf);
        }
        
        public string SearchChassis(string connVMwcf) {
            return base.Channel.SearchChassis(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchChassisAsync(string connVMwcf) {
            return base.Channel.SearchChassisAsync(connVMwcf);
        }
        
        public string SearchEngine(string connVMwcf) {
            return base.Channel.SearchEngine(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchEngineAsync(string connVMwcf) {
            return base.Channel.SearchEngineAsync(connVMwcf);
        }
        
        public string SearchProductbyMultipleSaleInvoice(string SaleInvoiceNos, string connVMwcf) {
            return base.Channel.SearchProductbyMultipleSaleInvoice(SaleInvoiceNos, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchProductbyMultipleSaleInvoiceAsync(string SaleInvoiceNos, string connVMwcf) {
            return base.Channel.SearchProductbyMultipleSaleInvoiceAsync(SaleInvoiceNos, connVMwcf);
        }
        
        public string SearchProductDT(
                    string ItemNo, 
                    string ProductName, 
                    string CategoryID, 
                    string CategoryName, 
                    string UOM, 
                    string IsRaw, 
                    string SerialNo, 
                    string HSCodeNo, 
                    string ActiveStatus, 
                    string Trading, 
                    string NonStock, 
                    string ProductCode, 
                    string databaseName, 
                    string customerId, 
                    string isvds, 
                    int BranchId, 
                    string connVMwcf) {
            return base.Channel.SearchProductDT(ItemNo, ProductName, CategoryID, CategoryName, UOM, IsRaw, SerialNo, HSCodeNo, ActiveStatus, Trading, NonStock, ProductCode, databaseName, customerId, isvds, BranchId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchProductDTAsync(
                    string ItemNo, 
                    string ProductName, 
                    string CategoryID, 
                    string CategoryName, 
                    string UOM, 
                    string IsRaw, 
                    string SerialNo, 
                    string HSCodeNo, 
                    string ActiveStatus, 
                    string Trading, 
                    string NonStock, 
                    string ProductCode, 
                    string databaseName, 
                    string customerId, 
                    string isvds, 
                    int BranchId, 
                    string connVMwcf) {
            return base.Channel.SearchProductDTAsync(ItemNo, ProductName, CategoryID, CategoryName, UOM, IsRaw, SerialNo, HSCodeNo, ActiveStatus, Trading, NonStock, ProductCode, databaseName, customerId, isvds, BranchId, connVMwcf);
        }
        
        public string SelectProductDTAll(string conditionFieldswcf, string conditionValueswcf, bool Dt, int BranchId, string databaseName, string isvds, string userBranchswcf, string connVMwcf) {
            return base.Channel.SelectProductDTAll(conditionFieldswcf, conditionValueswcf, Dt, BranchId, databaseName, isvds, userBranchswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectProductDTAllAsync(string conditionFieldswcf, string conditionValueswcf, bool Dt, int BranchId, string databaseName, string isvds, string userBranchswcf, string connVMwcf) {
            return base.Channel.SelectProductDTAllAsync(conditionFieldswcf, conditionValueswcf, Dt, BranchId, databaseName, isvds, userBranchswcf, connVMwcf);
        }
        
        public string SearchProductFinder(string ProductName, string ProductCode, string IsRaw, string CustomerId, string connVMwcf) {
            return base.Channel.SearchProductFinder(ProductName, ProductCode, IsRaw, CustomerId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchProductFinderAsync(string ProductName, string ProductCode, string IsRaw, string CustomerId, string connVMwcf) {
            return base.Channel.SearchProductFinderAsync(ProductName, ProductCode, IsRaw, CustomerId, connVMwcf);
        }
        
        public string SearchProductMiniDSDispose(string purchaseNumber, string connVMwcf) {
            return base.Channel.SearchProductMiniDSDispose(purchaseNumber, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchProductMiniDSDisposeAsync(string purchaseNumber, string connVMwcf) {
            return base.Channel.SearchProductMiniDSDisposeAsync(purchaseNumber, connVMwcf);
        }
        
        public string SearchProductNames(string ItemNo, string Id, string Names, string connVMwcf) {
            return base.Channel.SearchProductNames(ItemNo, Id, Names, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchProductNamesAsync(string ItemNo, string Id, string Names, string connVMwcf) {
            return base.Channel.SearchProductNamesAsync(ItemNo, Id, Names, connVMwcf);
        }
        
        public string SearchProductStock(string ItemNo, string id, string connVMwcf) {
            return base.Channel.SearchProductStock(ItemNo, id, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchProductStockAsync(string ItemNo, string id, string connVMwcf) {
            return base.Channel.SearchProductStockAsync(ItemNo, id, connVMwcf);
        }
        
        public string SelectAllOverhead(string ItemNo, string conditionFieldswcf, string conditionValueswcf, string connVMwcf) {
            return base.Channel.SelectAllOverhead(ItemNo, conditionFieldswcf, conditionValueswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllOverheadAsync(string ItemNo, string conditionFieldswcf, string conditionValueswcf, string connVMwcf) {
            return base.Channel.SelectAllOverheadAsync(ItemNo, conditionFieldswcf, conditionValueswcf, connVMwcf);
        }
        
        public string SelectProductName(string ItemNo, string conditionFieldswcf, string conditionValueswcf, string likeVMwcf, string connVMwcf) {
            return base.Channel.SelectProductName(ItemNo, conditionFieldswcf, conditionValueswcf, likeVMwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectProductNameAsync(string ItemNo, string conditionFieldswcf, string conditionValueswcf, string likeVMwcf, string connVMwcf) {
            return base.Channel.SelectProductNameAsync(ItemNo, conditionFieldswcf, conditionValueswcf, likeVMwcf, connVMwcf);
        }
        
        public string TrackingStockCheck(string ItemNo, string connVMwcf) {
            return base.Channel.TrackingStockCheck(ItemNo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> TrackingStockCheckAsync(string ItemNo, string connVMwcf) {
            return base.Channel.TrackingStockCheckAsync(ItemNo, connVMwcf);
        }
        
        public string UpdateProduct(string vmwcf, string Trackingswcf, string ItemType, string connVMwcf) {
            return base.Channel.UpdateProduct(vmwcf, Trackingswcf, ItemType, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProductAsync(string vmwcf, string Trackingswcf, string ItemType, string connVMwcf) {
            return base.Channel.UpdateProductAsync(vmwcf, Trackingswcf, ItemType, connVMwcf);
        }
        
        public string UpdateToProductNames(string vmwcf, string connVMwcf) {
            return base.Channel.UpdateToProductNames(vmwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UpdateToProductNamesAsync(string vmwcf, string connVMwcf) {
            return base.Channel.UpdateToProductNamesAsync(vmwcf, connVMwcf);
        }
        
        public string UpdateToProductStock(string psVMwcf, string connVMwcf) {
            return base.Channel.UpdateToProductStock(psVMwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UpdateToProductStockAsync(string psVMwcf, string connVMwcf) {
            return base.Channel.UpdateToProductStockAsync(psVMwcf, connVMwcf);
        }
    }
}
