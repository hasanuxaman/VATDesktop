//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATDesktop.Repo.BureauSaleWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BureauSaleWCF.IBureauSaleWCF")]
    public interface IBureauSaleWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/DoWork", ReplyAction="http://tempuri.org/IBureauSaleWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/DoWork", ReplyAction="http://tempuri.org/IBureauSaleWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/CurrencyInfo", ReplyAction="http://tempuri.org/IBureauSaleWCF/CurrencyInfoResponse")]
        string CurrencyInfo(string salesInvoiceNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/CurrencyInfo", ReplyAction="http://tempuri.org/IBureauSaleWCF/CurrencyInfoResponse")]
        System.Threading.Tasks.Task<string> CurrencyInfoAsync(string salesInvoiceNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/GetCategoryName", ReplyAction="http://tempuri.org/IBureauSaleWCF/GetCategoryNameResponse")]
        string GetCategoryName(string itemNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/GetCategoryName", ReplyAction="http://tempuri.org/IBureauSaleWCF/GetCategoryNameResponse")]
        System.Threading.Tasks.Task<string> GetCategoryNameAsync(string itemNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/GetProductInfo", ReplyAction="http://tempuri.org/IBureauSaleWCF/GetProductInfoResponse")]
        string GetProductInfo(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/GetProductInfo", ReplyAction="http://tempuri.org/IBureauSaleWCF/GetProductInfoResponse")]
        System.Threading.Tasks.Task<string> GetProductInfoAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/ImportInspectionData", ReplyAction="http://tempuri.org/IBureauSaleWCF/ImportInspectionDataResponse")]
        string ImportInspectionData(string dtSaleMwcf, string noOfSale, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/ImportInspectionData", ReplyAction="http://tempuri.org/IBureauSaleWCF/ImportInspectionDataResponse")]
        System.Threading.Tasks.Task<string> ImportInspectionDataAsync(string dtSaleMwcf, string noOfSale, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/InsertCreditInfo", ReplyAction="http://tempuri.org/IBureauSaleWCF/InsertCreditInfoResponse")]
        string InsertCreditInfo(string dtCreditwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/InsertCreditInfo", ReplyAction="http://tempuri.org/IBureauSaleWCF/InsertCreditInfoResponse")]
        System.Threading.Tasks.Task<string> InsertCreditInfoAsync(string dtCreditwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/LoadIssueItems", ReplyAction="http://tempuri.org/IBureauSaleWCF/LoadIssueItemsResponse")]
        string LoadIssueItems(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/LoadIssueItems", ReplyAction="http://tempuri.org/IBureauSaleWCF/LoadIssueItemsResponse")]
        System.Threading.Tasks.Task<string> LoadIssueItemsAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/ReturnSaleQty", ReplyAction="http://tempuri.org/IBureauSaleWCF/ReturnSaleQtyResponse")]
        string ReturnSaleQty(string saleReturnId, string itemNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/ReturnSaleQty", ReplyAction="http://tempuri.org/IBureauSaleWCF/ReturnSaleQtyResponse")]
        System.Threading.Tasks.Task<string> ReturnSaleQtyAsync(string saleReturnId, string itemNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/SalesInsert", ReplyAction="http://tempuri.org/IBureauSaleWCF/SalesInsertResponse")]
        string SalesInsert(string Masterwcf, string Detailswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/SalesInsert", ReplyAction="http://tempuri.org/IBureauSaleWCF/SalesInsertResponse")]
        System.Threading.Tasks.Task<string> SalesInsertAsync(string Masterwcf, string Detailswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/SalesInsertImport", ReplyAction="http://tempuri.org/IBureauSaleWCF/SalesInsertImportResponse")]
        string SalesInsertImport(string Masterwcf, string Detailswcf, string ExportDetailswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/SalesInsertImport", ReplyAction="http://tempuri.org/IBureauSaleWCF/SalesInsertImportResponse")]
        System.Threading.Tasks.Task<string> SalesInsertImportAsync(string Masterwcf, string Detailswcf, string ExportDetailswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/SalesPost", ReplyAction="http://tempuri.org/IBureauSaleWCF/SalesPostResponse")]
        string SalesPost(string Masterwcf, string Detailswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/SalesPost", ReplyAction="http://tempuri.org/IBureauSaleWCF/SalesPostResponse")]
        System.Threading.Tasks.Task<string> SalesPostAsync(string Masterwcf, string Detailswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/SalesUpdate", ReplyAction="http://tempuri.org/IBureauSaleWCF/SalesUpdateResponse")]
        string SalesUpdate(string Masterwcf, string Detailswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/SalesUpdate", ReplyAction="http://tempuri.org/IBureauSaleWCF/SalesUpdateResponse")]
        System.Threading.Tasks.Task<string> SalesUpdateAsync(string Masterwcf, string Detailswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/SearchSaleDetailDTNew", ReplyAction="http://tempuri.org/IBureauSaleWCF/SearchSaleDetailDTNewResponse")]
        string SearchSaleDetailDTNew(string SalesInvoiceNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/SearchSaleDetailDTNew", ReplyAction="http://tempuri.org/IBureauSaleWCF/SearchSaleDetailDTNewResponse")]
        System.Threading.Tasks.Task<string> SearchSaleDetailDTNewAsync(string SalesInvoiceNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/SearchSaleExportDTNew", ReplyAction="http://tempuri.org/IBureauSaleWCF/SearchSaleExportDTNewResponse")]
        string SearchSaleExportDTNew(string SalesInvoiceNo, string databaseName, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/SearchSaleExportDTNew", ReplyAction="http://tempuri.org/IBureauSaleWCF/SearchSaleExportDTNewResponse")]
        System.Threading.Tasks.Task<string> SearchSaleExportDTNewAsync(string SalesInvoiceNo, string databaseName, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/SearchSalesHeaderDTNew", ReplyAction="http://tempuri.org/IBureauSaleWCF/SearchSalesHeaderDTNewResponse")]
        string SearchSalesHeaderDTNew(string SalesInvoiceNo, string CustomerName, string CustomerGroupName, string VehicleType, string VehicleNo, string SerialNo, string InvoiceDateFrom, string InvoiceDateTo, string SaleType, string Trading, string IsPrint, string transactionType, string Post, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/SearchSalesHeaderDTNew", ReplyAction="http://tempuri.org/IBureauSaleWCF/SearchSalesHeaderDTNewResponse")]
        System.Threading.Tasks.Task<string> SearchSalesHeaderDTNewAsync(string SalesInvoiceNo, string CustomerName, string CustomerGroupName, string VehicleType, string VehicleNo, string SerialNo, string InvoiceDateFrom, string InvoiceDateTo, string SaleType, string Trading, string IsPrint, string transactionType, string Post, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/SearchType", ReplyAction="http://tempuri.org/IBureauSaleWCF/SearchTypeResponse")]
        string SearchType(string buId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/SearchType", ReplyAction="http://tempuri.org/IBureauSaleWCF/SearchTypeResponse")]
        System.Threading.Tasks.Task<string> SearchTypeAsync(string buId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/UpdateCreditNo", ReplyAction="http://tempuri.org/IBureauSaleWCF/UpdateCreditNoResponse")]
        string UpdateCreditNo(string challanDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/UpdateCreditNo", ReplyAction="http://tempuri.org/IBureauSaleWCF/UpdateCreditNoResponse")]
        System.Threading.Tasks.Task<string> UpdateCreditNoAsync(string challanDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/UpdatePrintNew", ReplyAction="http://tempuri.org/IBureauSaleWCF/UpdatePrintNewResponse")]
        string UpdatePrintNew(string InvoiceNo, int PrintCopy, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBureauSaleWCF/UpdatePrintNew", ReplyAction="http://tempuri.org/IBureauSaleWCF/UpdatePrintNewResponse")]
        System.Threading.Tasks.Task<string> UpdatePrintNewAsync(string InvoiceNo, int PrintCopy, string connVMwcf);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBureauSaleWCFChannel : VATDesktop.Repo.BureauSaleWCF.IBureauSaleWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BureauSaleWCFClient : System.ServiceModel.ClientBase<VATDesktop.Repo.BureauSaleWCF.IBureauSaleWCF>, VATDesktop.Repo.BureauSaleWCF.IBureauSaleWCF {
        
        public BureauSaleWCFClient() {
        }
        
        public BureauSaleWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BureauSaleWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BureauSaleWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BureauSaleWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string CurrencyInfo(string salesInvoiceNo, string connVMwcf) {
            return base.Channel.CurrencyInfo(salesInvoiceNo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> CurrencyInfoAsync(string salesInvoiceNo, string connVMwcf) {
            return base.Channel.CurrencyInfoAsync(salesInvoiceNo, connVMwcf);
        }
        
        public string GetCategoryName(string itemNo, string connVMwcf) {
            return base.Channel.GetCategoryName(itemNo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetCategoryNameAsync(string itemNo, string connVMwcf) {
            return base.Channel.GetCategoryNameAsync(itemNo, connVMwcf);
        }
        
        public string GetProductInfo(string connVMwcf) {
            return base.Channel.GetProductInfo(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetProductInfoAsync(string connVMwcf) {
            return base.Channel.GetProductInfoAsync(connVMwcf);
        }
        
        public string ImportInspectionData(string dtSaleMwcf, string noOfSale, string connVMwcf) {
            return base.Channel.ImportInspectionData(dtSaleMwcf, noOfSale, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> ImportInspectionDataAsync(string dtSaleMwcf, string noOfSale, string connVMwcf) {
            return base.Channel.ImportInspectionDataAsync(dtSaleMwcf, noOfSale, connVMwcf);
        }
        
        public string InsertCreditInfo(string dtCreditwcf, string connVMwcf) {
            return base.Channel.InsertCreditInfo(dtCreditwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> InsertCreditInfoAsync(string dtCreditwcf, string connVMwcf) {
            return base.Channel.InsertCreditInfoAsync(dtCreditwcf, connVMwcf);
        }
        
        public string LoadIssueItems(string connVMwcf) {
            return base.Channel.LoadIssueItems(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> LoadIssueItemsAsync(string connVMwcf) {
            return base.Channel.LoadIssueItemsAsync(connVMwcf);
        }
        
        public string ReturnSaleQty(string saleReturnId, string itemNo, string connVMwcf) {
            return base.Channel.ReturnSaleQty(saleReturnId, itemNo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> ReturnSaleQtyAsync(string saleReturnId, string itemNo, string connVMwcf) {
            return base.Channel.ReturnSaleQtyAsync(saleReturnId, itemNo, connVMwcf);
        }
        
        public string SalesInsert(string Masterwcf, string Detailswcf, string connVMwcf) {
            return base.Channel.SalesInsert(Masterwcf, Detailswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SalesInsertAsync(string Masterwcf, string Detailswcf, string connVMwcf) {
            return base.Channel.SalesInsertAsync(Masterwcf, Detailswcf, connVMwcf);
        }
        
        public string SalesInsertImport(string Masterwcf, string Detailswcf, string ExportDetailswcf, string connVMwcf) {
            return base.Channel.SalesInsertImport(Masterwcf, Detailswcf, ExportDetailswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SalesInsertImportAsync(string Masterwcf, string Detailswcf, string ExportDetailswcf, string connVMwcf) {
            return base.Channel.SalesInsertImportAsync(Masterwcf, Detailswcf, ExportDetailswcf, connVMwcf);
        }
        
        public string SalesPost(string Masterwcf, string Detailswcf, string connVMwcf) {
            return base.Channel.SalesPost(Masterwcf, Detailswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SalesPostAsync(string Masterwcf, string Detailswcf, string connVMwcf) {
            return base.Channel.SalesPostAsync(Masterwcf, Detailswcf, connVMwcf);
        }
        
        public string SalesUpdate(string Masterwcf, string Detailswcf, string connVMwcf) {
            return base.Channel.SalesUpdate(Masterwcf, Detailswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SalesUpdateAsync(string Masterwcf, string Detailswcf, string connVMwcf) {
            return base.Channel.SalesUpdateAsync(Masterwcf, Detailswcf, connVMwcf);
        }
        
        public string SearchSaleDetailDTNew(string SalesInvoiceNo, string connVMwcf) {
            return base.Channel.SearchSaleDetailDTNew(SalesInvoiceNo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchSaleDetailDTNewAsync(string SalesInvoiceNo, string connVMwcf) {
            return base.Channel.SearchSaleDetailDTNewAsync(SalesInvoiceNo, connVMwcf);
        }
        
        public string SearchSaleExportDTNew(string SalesInvoiceNo, string databaseName, string connVMwcf) {
            return base.Channel.SearchSaleExportDTNew(SalesInvoiceNo, databaseName, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchSaleExportDTNewAsync(string SalesInvoiceNo, string databaseName, string connVMwcf) {
            return base.Channel.SearchSaleExportDTNewAsync(SalesInvoiceNo, databaseName, connVMwcf);
        }
        
        public string SearchSalesHeaderDTNew(string SalesInvoiceNo, string CustomerName, string CustomerGroupName, string VehicleType, string VehicleNo, string SerialNo, string InvoiceDateFrom, string InvoiceDateTo, string SaleType, string Trading, string IsPrint, string transactionType, string Post, string connVMwcf) {
            return base.Channel.SearchSalesHeaderDTNew(SalesInvoiceNo, CustomerName, CustomerGroupName, VehicleType, VehicleNo, SerialNo, InvoiceDateFrom, InvoiceDateTo, SaleType, Trading, IsPrint, transactionType, Post, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchSalesHeaderDTNewAsync(string SalesInvoiceNo, string CustomerName, string CustomerGroupName, string VehicleType, string VehicleNo, string SerialNo, string InvoiceDateFrom, string InvoiceDateTo, string SaleType, string Trading, string IsPrint, string transactionType, string Post, string connVMwcf) {
            return base.Channel.SearchSalesHeaderDTNewAsync(SalesInvoiceNo, CustomerName, CustomerGroupName, VehicleType, VehicleNo, SerialNo, InvoiceDateFrom, InvoiceDateTo, SaleType, Trading, IsPrint, transactionType, Post, connVMwcf);
        }
        
        public string SearchType(string buId) {
            return base.Channel.SearchType(buId);
        }
        
        public System.Threading.Tasks.Task<string> SearchTypeAsync(string buId) {
            return base.Channel.SearchTypeAsync(buId);
        }
        
        public string UpdateCreditNo(string challanDate, string connVMwcf) {
            return base.Channel.UpdateCreditNo(challanDate, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCreditNoAsync(string challanDate, string connVMwcf) {
            return base.Channel.UpdateCreditNoAsync(challanDate, connVMwcf);
        }
        
        public string UpdatePrintNew(string InvoiceNo, int PrintCopy, string connVMwcf) {
            return base.Channel.UpdatePrintNew(InvoiceNo, PrintCopy, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePrintNewAsync(string InvoiceNo, int PrintCopy, string connVMwcf) {
            return base.Channel.UpdatePrintNewAsync(InvoiceNo, PrintCopy, connVMwcf);
        }
    }
}
