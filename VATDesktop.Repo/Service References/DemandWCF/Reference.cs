//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATDesktop.Repo.DemandWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DemandWCF.IDemandWCF")]
    public interface IDemandWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemandWCF/DoWork", ReplyAction="http://tempuri.org/IDemandWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemandWCF/DoWork", ReplyAction="http://tempuri.org/IDemandWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemandWCF/BanderolStock", ReplyAction="http://tempuri.org/IDemandWCF/BanderolStockResponse")]
        string BanderolStock(string itemNo, string BandProductID, string tranDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemandWCF/BanderolStock", ReplyAction="http://tempuri.org/IDemandWCF/BanderolStockResponse")]
        System.Threading.Tasks.Task<string> BanderolStockAsync(string itemNo, string BandProductID, string tranDate, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemandWCF/DemandInsert", ReplyAction="http://tempuri.org/IDemandWCF/DemandInsertResponse")]
        string DemandInsert(string Masterwcf, string Detailswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemandWCF/DemandInsert", ReplyAction="http://tempuri.org/IDemandWCF/DemandInsertResponse")]
        System.Threading.Tasks.Task<string> DemandInsertAsync(string Masterwcf, string Detailswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemandWCF/DemandPost", ReplyAction="http://tempuri.org/IDemandWCF/DemandPostResponse")]
        string DemandPost(string Masterwcf, string Detailswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemandWCF/DemandPost", ReplyAction="http://tempuri.org/IDemandWCF/DemandPostResponse")]
        System.Threading.Tasks.Task<string> DemandPostAsync(string Masterwcf, string Detailswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemandWCF/DemandQty", ReplyAction="http://tempuri.org/IDemandWCF/DemandQtyResponse")]
        string DemandQty(string demandId, string bandeProId, string post, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemandWCF/DemandQty", ReplyAction="http://tempuri.org/IDemandWCF/DemandQtyResponse")]
        System.Threading.Tasks.Task<string> DemandQtyAsync(string demandId, string bandeProId, string post, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemandWCF/DemandUpdate", ReplyAction="http://tempuri.org/IDemandWCF/DemandUpdateResponse")]
        string DemandUpdate(string Masterwcf, string Detailswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemandWCF/DemandUpdate", ReplyAction="http://tempuri.org/IDemandWCF/DemandUpdateResponse")]
        System.Threading.Tasks.Task<string> DemandUpdateAsync(string Masterwcf, string Detailswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemandWCF/ReturnQty", ReplyAction="http://tempuri.org/IDemandWCF/ReturnQtyResponse")]
        string ReturnQty(string demandId, string bandeProId, string post, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemandWCF/ReturnQty", ReplyAction="http://tempuri.org/IDemandWCF/ReturnQtyResponse")]
        System.Threading.Tasks.Task<string> ReturnQtyAsync(string demandId, string bandeProId, string post, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemandWCF/SearchDemandDetailDTNew", ReplyAction="http://tempuri.org/IDemandWCF/SearchDemandDetailDTNewResponse")]
        string SearchDemandDetailDTNew(string DemandNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemandWCF/SearchDemandDetailDTNew", ReplyAction="http://tempuri.org/IDemandWCF/SearchDemandDetailDTNewResponse")]
        System.Threading.Tasks.Task<string> SearchDemandDetailDTNewAsync(string DemandNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemandWCF/SearchDemandHeaderDTNew", ReplyAction="http://tempuri.org/IDemandWCF/SearchDemandHeaderDTNewResponse")]
        string SearchDemandHeaderDTNew(string DemandNo, string DemandDateFrom, string DemandDateTo, string TransactionType, string Post, int BranchId, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemandWCF/SearchDemandHeaderDTNew", ReplyAction="http://tempuri.org/IDemandWCF/SearchDemandHeaderDTNewResponse")]
        System.Threading.Tasks.Task<string> SearchDemandHeaderDTNewAsync(string DemandNo, string DemandDateFrom, string DemandDateTo, string TransactionType, string Post, int BranchId, string connVMwcf);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDemandWCFChannel : VATDesktop.Repo.DemandWCF.IDemandWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DemandWCFClient : System.ServiceModel.ClientBase<VATDesktop.Repo.DemandWCF.IDemandWCF>, VATDesktop.Repo.DemandWCF.IDemandWCF {
        
        public DemandWCFClient() {
        }
        
        public DemandWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DemandWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DemandWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DemandWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string BanderolStock(string itemNo, string BandProductID, string tranDate, string connVMwcf) {
            return base.Channel.BanderolStock(itemNo, BandProductID, tranDate, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> BanderolStockAsync(string itemNo, string BandProductID, string tranDate, string connVMwcf) {
            return base.Channel.BanderolStockAsync(itemNo, BandProductID, tranDate, connVMwcf);
        }
        
        public string DemandInsert(string Masterwcf, string Detailswcf, string connVMwcf) {
            return base.Channel.DemandInsert(Masterwcf, Detailswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DemandInsertAsync(string Masterwcf, string Detailswcf, string connVMwcf) {
            return base.Channel.DemandInsertAsync(Masterwcf, Detailswcf, connVMwcf);
        }
        
        public string DemandPost(string Masterwcf, string Detailswcf, string connVMwcf) {
            return base.Channel.DemandPost(Masterwcf, Detailswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DemandPostAsync(string Masterwcf, string Detailswcf, string connVMwcf) {
            return base.Channel.DemandPostAsync(Masterwcf, Detailswcf, connVMwcf);
        }
        
        public string DemandQty(string demandId, string bandeProId, string post, string connVMwcf) {
            return base.Channel.DemandQty(demandId, bandeProId, post, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DemandQtyAsync(string demandId, string bandeProId, string post, string connVMwcf) {
            return base.Channel.DemandQtyAsync(demandId, bandeProId, post, connVMwcf);
        }
        
        public string DemandUpdate(string Masterwcf, string Detailswcf, string connVMwcf) {
            return base.Channel.DemandUpdate(Masterwcf, Detailswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DemandUpdateAsync(string Masterwcf, string Detailswcf, string connVMwcf) {
            return base.Channel.DemandUpdateAsync(Masterwcf, Detailswcf, connVMwcf);
        }
        
        public string ReturnQty(string demandId, string bandeProId, string post, string connVMwcf) {
            return base.Channel.ReturnQty(demandId, bandeProId, post, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> ReturnQtyAsync(string demandId, string bandeProId, string post, string connVMwcf) {
            return base.Channel.ReturnQtyAsync(demandId, bandeProId, post, connVMwcf);
        }
        
        public string SearchDemandDetailDTNew(string DemandNo, string connVMwcf) {
            return base.Channel.SearchDemandDetailDTNew(DemandNo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchDemandDetailDTNewAsync(string DemandNo, string connVMwcf) {
            return base.Channel.SearchDemandDetailDTNewAsync(DemandNo, connVMwcf);
        }
        
        public string SearchDemandHeaderDTNew(string DemandNo, string DemandDateFrom, string DemandDateTo, string TransactionType, string Post, int BranchId, string connVMwcf) {
            return base.Channel.SearchDemandHeaderDTNew(DemandNo, DemandDateFrom, DemandDateTo, TransactionType, Post, BranchId, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchDemandHeaderDTNewAsync(string DemandNo, string DemandDateFrom, string DemandDateTo, string TransactionType, string Post, int BranchId, string connVMwcf) {
            return base.Channel.SearchDemandHeaderDTNewAsync(DemandNo, DemandDateFrom, DemandDateTo, TransactionType, Post, BranchId, connVMwcf);
        }
    }
}
