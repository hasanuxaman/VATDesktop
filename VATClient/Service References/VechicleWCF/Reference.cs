//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATClient.VechicleWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VechicleWCF.IVehicleWCF")]
    public interface IVehicleWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleWCF/DoWork", ReplyAction="http://tempuri.org/IVehicleWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleWCF/DoWork", ReplyAction="http://tempuri.org/IVehicleWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleWCF/DropDown", ReplyAction="http://tempuri.org/IVehicleWCF/DropDownResponse")]
        string DropDown(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleWCF/DropDown", ReplyAction="http://tempuri.org/IVehicleWCF/DropDownResponse")]
        System.Threading.Tasks.Task<string> DropDownAsync(string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleWCF/SelectAllLst", ReplyAction="http://tempuri.org/IVehicleWCF/SelectAllLstResponse")]
        string SelectAllLst(int Id, string conditionFieldswcf, string conditionValuesqcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleWCF/SelectAllLst", ReplyAction="http://tempuri.org/IVehicleWCF/SelectAllLstResponse")]
        System.Threading.Tasks.Task<string> SelectAllLstAsync(int Id, string conditionFieldswcf, string conditionValuesqcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleWCF/SelectAll", ReplyAction="http://tempuri.org/IVehicleWCF/SelectAllResponse")]
        string SelectAll(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleWCF/SelectAll", ReplyAction="http://tempuri.org/IVehicleWCF/SelectAllResponse")]
        System.Threading.Tasks.Task<string> SelectAllAsync(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleWCF/InsertToVehicle", ReplyAction="http://tempuri.org/IVehicleWCF/InsertToVehicleResponse")]
        string InsertToVehicle(string vmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleWCF/InsertToVehicle", ReplyAction="http://tempuri.org/IVehicleWCF/InsertToVehicleResponse")]
        System.Threading.Tasks.Task<string> InsertToVehicleAsync(string vmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleWCF/UpdateToVehicle", ReplyAction="http://tempuri.org/IVehicleWCF/UpdateToVehicleResponse")]
        string UpdateToVehicle(string vmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleWCF/UpdateToVehicle", ReplyAction="http://tempuri.org/IVehicleWCF/UpdateToVehicleResponse")]
        System.Threading.Tasks.Task<string> UpdateToVehicleAsync(string vmwcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleWCF/Delete", ReplyAction="http://tempuri.org/IVehicleWCF/DeleteResponse")]
        string Delete(string vmwcf, string idswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleWCF/Delete", ReplyAction="http://tempuri.org/IVehicleWCF/DeleteResponse")]
        System.Threading.Tasks.Task<string> DeleteAsync(string vmwcf, string idswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleWCF/GetExcelData", ReplyAction="http://tempuri.org/IVehicleWCF/GetExcelDataResponse")]
        string GetExcelData(string idswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleWCF/GetExcelData", ReplyAction="http://tempuri.org/IVehicleWCF/GetExcelDataResponse")]
        System.Threading.Tasks.Task<string> GetExcelDataAsync(string idswcf, string connVMwcf);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVehicleWCFChannel : VATClient.VechicleWCF.IVehicleWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VehicleWCFClient : System.ServiceModel.ClientBase<VATClient.VechicleWCF.IVehicleWCF>, VATClient.VechicleWCF.IVehicleWCF {
        
        public VehicleWCFClient() {
        }
        
        public VehicleWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VehicleWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VehicleWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VehicleWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string DropDown(string connVMwcf) {
            return base.Channel.DropDown(connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DropDownAsync(string connVMwcf) {
            return base.Channel.DropDownAsync(connVMwcf);
        }
        
        public string SelectAllLst(int Id, string conditionFieldswcf, string conditionValuesqcf, string connVMwcf) {
            return base.Channel.SelectAllLst(Id, conditionFieldswcf, conditionValuesqcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllLstAsync(int Id, string conditionFieldswcf, string conditionValuesqcf, string connVMwcf) {
            return base.Channel.SelectAllLstAsync(Id, conditionFieldswcf, conditionValuesqcf, connVMwcf);
        }
        
        public string SelectAll(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf) {
            return base.Channel.SelectAll(Id, conditionFieldswcf, conditionValueswcf, Dt, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllAsync(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMwcf) {
            return base.Channel.SelectAllAsync(Id, conditionFieldswcf, conditionValueswcf, Dt, connVMwcf);
        }
        
        public string InsertToVehicle(string vmwcf, string connVMwcf) {
            return base.Channel.InsertToVehicle(vmwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> InsertToVehicleAsync(string vmwcf, string connVMwcf) {
            return base.Channel.InsertToVehicleAsync(vmwcf, connVMwcf);
        }
        
        public string UpdateToVehicle(string vmwcf, string connVMwcf) {
            return base.Channel.UpdateToVehicle(vmwcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> UpdateToVehicleAsync(string vmwcf, string connVMwcf) {
            return base.Channel.UpdateToVehicleAsync(vmwcf, connVMwcf);
        }
        
        public string Delete(string vmwcf, string idswcf, string connVMwcf) {
            return base.Channel.Delete(vmwcf, idswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAsync(string vmwcf, string idswcf, string connVMwcf) {
            return base.Channel.DeleteAsync(vmwcf, idswcf, connVMwcf);
        }
        
        public string GetExcelData(string idswcf, string connVMwcf) {
            return base.Channel.GetExcelData(idswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> GetExcelDataAsync(string idswcf, string connVMwcf) {
            return base.Channel.GetExcelDataAsync(idswcf, connVMwcf);
        }
    }
}
