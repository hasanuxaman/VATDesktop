//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATDesktop.Repo.TrackingWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TrackingWCF.ITrackingWCF")]
    public interface ITrackingWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/DoWork", ReplyAction="http://tempuri.org/ITrackingWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/DoWork", ReplyAction="http://tempuri.org/ITrackingWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/SearchExistingTrackingItems", ReplyAction="http://tempuri.org/ITrackingWCF/SearchExistingTrackingItemsResponse")]
        string SearchExistingTrackingItems(string isReceive, string receiveNo, string isSale, string saleInvoiceNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/SearchExistingTrackingItems", ReplyAction="http://tempuri.org/ITrackingWCF/SearchExistingTrackingItemsResponse")]
        System.Threading.Tasks.Task<string> SearchExistingTrackingItemsAsync(string isReceive, string receiveNo, string isSale, string saleInvoiceNo, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/TrackingDelete", ReplyAction="http://tempuri.org/ITrackingWCF/TrackingDeleteResponse")]
        string TrackingDelete(string Headingswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/TrackingDelete", ReplyAction="http://tempuri.org/ITrackingWCF/TrackingDeleteResponse")]
        System.Threading.Tasks.Task<string> TrackingDeleteAsync(string Headingswcf, string connVMwcf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/SearchTrackingItems", ReplyAction="http://tempuri.org/ITrackingWCF/SearchTrackingItemsResponse")]
        string SearchTrackingItems(string itemNo, string isIssue, string isReceive, string isSale, string finishItemNo, string receiveNo, string issueNo, string saleInvoiceNo, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/SearchTrackingItems", ReplyAction="http://tempuri.org/ITrackingWCF/SearchTrackingItemsResponse")]
        System.Threading.Tasks.Task<string> SearchTrackingItemsAsync(string itemNo, string isIssue, string isReceive, string isSale, string finishItemNo, string receiveNo, string issueNo, string saleInvoiceNo, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/FindTrackingItems", ReplyAction="http://tempuri.org/ITrackingWCF/FindTrackingItemsResponse")]
        string FindTrackingItems(string fItemNo, string vatName, string effectDate, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/FindTrackingItems", ReplyAction="http://tempuri.org/ITrackingWCF/FindTrackingItemsResponse")]
        System.Threading.Tasks.Task<string> FindTrackingItemsAsync(string fItemNo, string vatName, string effectDate, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/SearchReceiveTrackItems", ReplyAction="http://tempuri.org/ITrackingWCF/SearchReceiveTrackItemsResponse")]
        string SearchReceiveTrackItems(string itemNo, string isTransaction, string transactionId, string type, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/SearchReceiveTrackItems", ReplyAction="http://tempuri.org/ITrackingWCF/SearchReceiveTrackItemsResponse")]
        System.Threading.Tasks.Task<string> SearchReceiveTrackItemsAsync(string itemNo, string isTransaction, string transactionId, string type, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/SearchTrackingForReturn", ReplyAction="http://tempuri.org/ITrackingWCF/SearchTrackingForReturnResponse")]
        string SearchTrackingForReturn(string transactionType, string itemNo, string transactionID, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/SearchTrackingForReturn", ReplyAction="http://tempuri.org/ITrackingWCF/SearchTrackingForReturnResponse")]
        System.Threading.Tasks.Task<string> SearchTrackingForReturnAsync(string transactionType, string itemNo, string transactionID, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/SearchTrackings", ReplyAction="http://tempuri.org/ITrackingWCF/SearchTrackingsResponse")]
        string SearchTrackings(string itemNo, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/SearchTrackings", ReplyAction="http://tempuri.org/ITrackingWCF/SearchTrackingsResponse")]
        System.Threading.Tasks.Task<string> SearchTrackingsAsync(string itemNo, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/TrackingInsert", ReplyAction="http://tempuri.org/ITrackingWCF/TrackingInsertResponse")]
        string TrackingInsert(string Trackingswcf, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/TrackingInsert", ReplyAction="http://tempuri.org/ITrackingWCF/TrackingInsertResponse")]
        System.Threading.Tasks.Task<string> TrackingInsertAsync(string Trackingswcf, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/TrackingUpdate", ReplyAction="http://tempuri.org/ITrackingWCF/TrackingUpdateResponse")]
        string TrackingUpdate(string Trackingswcf, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackingWCF/TrackingUpdate", ReplyAction="http://tempuri.org/ITrackingWCF/TrackingUpdateResponse")]
        System.Threading.Tasks.Task<string> TrackingUpdateAsync(string Trackingswcf, string connVMWCF);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITrackingWCFChannel : VATDesktop.Repo.TrackingWCF.ITrackingWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TrackingWCFClient : System.ServiceModel.ClientBase<VATDesktop.Repo.TrackingWCF.ITrackingWCF>, VATDesktop.Repo.TrackingWCF.ITrackingWCF {
        
        public TrackingWCFClient() {
        }
        
        public TrackingWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TrackingWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrackingWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrackingWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string SearchExistingTrackingItems(string isReceive, string receiveNo, string isSale, string saleInvoiceNo, string connVMwcf) {
            return base.Channel.SearchExistingTrackingItems(isReceive, receiveNo, isSale, saleInvoiceNo, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> SearchExistingTrackingItemsAsync(string isReceive, string receiveNo, string isSale, string saleInvoiceNo, string connVMwcf) {
            return base.Channel.SearchExistingTrackingItemsAsync(isReceive, receiveNo, isSale, saleInvoiceNo, connVMwcf);
        }
        
        public string TrackingDelete(string Headingswcf, string connVMwcf) {
            return base.Channel.TrackingDelete(Headingswcf, connVMwcf);
        }
        
        public System.Threading.Tasks.Task<string> TrackingDeleteAsync(string Headingswcf, string connVMwcf) {
            return base.Channel.TrackingDeleteAsync(Headingswcf, connVMwcf);
        }
        
        public string SearchTrackingItems(string itemNo, string isIssue, string isReceive, string isSale, string finishItemNo, string receiveNo, string issueNo, string saleInvoiceNo, string connVMWCF) {
            return base.Channel.SearchTrackingItems(itemNo, isIssue, isReceive, isSale, finishItemNo, receiveNo, issueNo, saleInvoiceNo, connVMWCF);
        }
        
        public System.Threading.Tasks.Task<string> SearchTrackingItemsAsync(string itemNo, string isIssue, string isReceive, string isSale, string finishItemNo, string receiveNo, string issueNo, string saleInvoiceNo, string connVMWCF) {
            return base.Channel.SearchTrackingItemsAsync(itemNo, isIssue, isReceive, isSale, finishItemNo, receiveNo, issueNo, saleInvoiceNo, connVMWCF);
        }
        
        public string FindTrackingItems(string fItemNo, string vatName, string effectDate, string connVMWCF) {
            return base.Channel.FindTrackingItems(fItemNo, vatName, effectDate, connVMWCF);
        }
        
        public System.Threading.Tasks.Task<string> FindTrackingItemsAsync(string fItemNo, string vatName, string effectDate, string connVMWCF) {
            return base.Channel.FindTrackingItemsAsync(fItemNo, vatName, effectDate, connVMWCF);
        }
        
        public string SearchReceiveTrackItems(string itemNo, string isTransaction, string transactionId, string type, string connVMWCF) {
            return base.Channel.SearchReceiveTrackItems(itemNo, isTransaction, transactionId, type, connVMWCF);
        }
        
        public System.Threading.Tasks.Task<string> SearchReceiveTrackItemsAsync(string itemNo, string isTransaction, string transactionId, string type, string connVMWCF) {
            return base.Channel.SearchReceiveTrackItemsAsync(itemNo, isTransaction, transactionId, type, connVMWCF);
        }
        
        public string SearchTrackingForReturn(string transactionType, string itemNo, string transactionID, string connVMWCF) {
            return base.Channel.SearchTrackingForReturn(transactionType, itemNo, transactionID, connVMWCF);
        }
        
        public System.Threading.Tasks.Task<string> SearchTrackingForReturnAsync(string transactionType, string itemNo, string transactionID, string connVMWCF) {
            return base.Channel.SearchTrackingForReturnAsync(transactionType, itemNo, transactionID, connVMWCF);
        }
        
        public string SearchTrackings(string itemNo, string connVMWCF) {
            return base.Channel.SearchTrackings(itemNo, connVMWCF);
        }
        
        public System.Threading.Tasks.Task<string> SearchTrackingsAsync(string itemNo, string connVMWCF) {
            return base.Channel.SearchTrackingsAsync(itemNo, connVMWCF);
        }
        
        public string TrackingInsert(string Trackingswcf, string connVMWCF) {
            return base.Channel.TrackingInsert(Trackingswcf, connVMWCF);
        }
        
        public System.Threading.Tasks.Task<string> TrackingInsertAsync(string Trackingswcf, string connVMWCF) {
            return base.Channel.TrackingInsertAsync(Trackingswcf, connVMWCF);
        }
        
        public string TrackingUpdate(string Trackingswcf, string connVMWCF) {
            return base.Channel.TrackingUpdate(Trackingswcf, connVMWCF);
        }
        
        public System.Threading.Tasks.Task<string> TrackingUpdateAsync(string Trackingswcf, string connVMWCF) {
            return base.Channel.TrackingUpdateAsync(Trackingswcf, connVMWCF);
        }
    }
}
