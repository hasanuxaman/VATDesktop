//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATDesktop.Repo.SDDepositWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SDDepositWCF.ISDDepositWCF")]
    public interface ISDDepositWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDDepositWCF/DoWork", ReplyAction="http://tempuri.org/ISDDepositWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDDepositWCF/DoWork", ReplyAction="http://tempuri.org/ISDDepositWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDDepositWCF/SelectAllList", ReplyAction="http://tempuri.org/ISDDepositWCF/SelectAllListResponse")]
        string SelectAllList(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDDepositWCF/SelectAllList", ReplyAction="http://tempuri.org/ISDDepositWCF/SelectAllListResponse")]
        System.Threading.Tasks.Task<string> SelectAllListAsync(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDDepositWCF/DepositInsert", ReplyAction="http://tempuri.org/ISDDepositWCF/DepositInsertResponse")]
        string DepositInsert(string Masterwcf, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDDepositWCF/DepositInsert", ReplyAction="http://tempuri.org/ISDDepositWCF/DepositInsertResponse")]
        System.Threading.Tasks.Task<string> DepositInsertAsync(string Masterwcf, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDDepositWCF/DepositPost", ReplyAction="http://tempuri.org/ISDDepositWCF/DepositPostResponse")]
        string DepositPost(string Masterwcf, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDDepositWCF/DepositPost", ReplyAction="http://tempuri.org/ISDDepositWCF/DepositPostResponse")]
        System.Threading.Tasks.Task<string> DepositPostAsync(string Masterwcf, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDDepositWCF/DepositUpdate", ReplyAction="http://tempuri.org/ISDDepositWCF/DepositUpdateResponse")]
        string DepositUpdate(string Masterwcf, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDDepositWCF/DepositUpdate", ReplyAction="http://tempuri.org/ISDDepositWCF/DepositUpdateResponse")]
        System.Threading.Tasks.Task<string> DepositUpdateAsync(string Masterwcf, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDDepositWCF/SelectAll", ReplyAction="http://tempuri.org/ISDDepositWCF/SelectAllResponse")]
        string SelectAll(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDDepositWCF/SelectAll", ReplyAction="http://tempuri.org/ISDDepositWCF/SelectAllResponse")]
        System.Threading.Tasks.Task<string> SelectAllAsync(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMWCF);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISDDepositWCFChannel : VATDesktop.Repo.SDDepositWCF.ISDDepositWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SDDepositWCFClient : System.ServiceModel.ClientBase<VATDesktop.Repo.SDDepositWCF.ISDDepositWCF>, VATDesktop.Repo.SDDepositWCF.ISDDepositWCF {
        
        public SDDepositWCFClient() {
        }
        
        public SDDepositWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SDDepositWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SDDepositWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SDDepositWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string SelectAllList(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMWCF) {
            return base.Channel.SelectAllList(Id, conditionFieldswcf, conditionValueswcf, connVMWCF);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllListAsync(int Id, string conditionFieldswcf, string conditionValueswcf, string connVMWCF) {
            return base.Channel.SelectAllListAsync(Id, conditionFieldswcf, conditionValueswcf, connVMWCF);
        }
        
        public string DepositInsert(string Masterwcf, string connVMWCF) {
            return base.Channel.DepositInsert(Masterwcf, connVMWCF);
        }
        
        public System.Threading.Tasks.Task<string> DepositInsertAsync(string Masterwcf, string connVMWCF) {
            return base.Channel.DepositInsertAsync(Masterwcf, connVMWCF);
        }
        
        public string DepositPost(string Masterwcf, string connVMWCF) {
            return base.Channel.DepositPost(Masterwcf, connVMWCF);
        }
        
        public System.Threading.Tasks.Task<string> DepositPostAsync(string Masterwcf, string connVMWCF) {
            return base.Channel.DepositPostAsync(Masterwcf, connVMWCF);
        }
        
        public string DepositUpdate(string Masterwcf, string connVMWCF) {
            return base.Channel.DepositUpdate(Masterwcf, connVMWCF);
        }
        
        public System.Threading.Tasks.Task<string> DepositUpdateAsync(string Masterwcf, string connVMWCF) {
            return base.Channel.DepositUpdateAsync(Masterwcf, connVMWCF);
        }
        
        public string SelectAll(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMWCF) {
            return base.Channel.SelectAll(Id, conditionFieldswcf, conditionValueswcf, Dt, connVMWCF);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllAsync(int Id, string conditionFieldswcf, string conditionValueswcf, bool Dt, string connVMWCF) {
            return base.Channel.SelectAllAsync(Id, conditionFieldswcf, conditionValueswcf, Dt, connVMWCF);
        }
    }
}
