//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VATDesktop.Repo.CompanyInformationWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CompanyInformationWCF.ICompanyInformationWCF")]
    public interface ICompanyInformationWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyInformationWCF/DoWork", ReplyAction="http://tempuri.org/ICompanyInformationWCF/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyInformationWCF/DoWork", ReplyAction="http://tempuri.org/ICompanyInformationWCF/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyInformationWCF/DropDown", ReplyAction="http://tempuri.org/ICompanyInformationWCF/DropDownResponse")]
        string DropDown(string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyInformationWCF/DropDown", ReplyAction="http://tempuri.org/ICompanyInformationWCF/DropDownResponse")]
        System.Threading.Tasks.Task<string> DropDownAsync(string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyInformationWCF/SelectAll", ReplyAction="http://tempuri.org/ICompanyInformationWCF/SelectAllResponse")]
        string SelectAll(string CompanyID, string conditionFieldswcf, string conditionValueswcf, string connVMWCF);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyInformationWCF/SelectAll", ReplyAction="http://tempuri.org/ICompanyInformationWCF/SelectAllResponse")]
        System.Threading.Tasks.Task<string> SelectAllAsync(string CompanyID, string conditionFieldswcf, string conditionValueswcf, string connVMWCF);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICompanyInformationWCFChannel : VATDesktop.Repo.CompanyInformationWCF.ICompanyInformationWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompanyInformationWCFClient : System.ServiceModel.ClientBase<VATDesktop.Repo.CompanyInformationWCF.ICompanyInformationWCF>, VATDesktop.Repo.CompanyInformationWCF.ICompanyInformationWCF {
        
        public CompanyInformationWCFClient() {
        }
        
        public CompanyInformationWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompanyInformationWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompanyInformationWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompanyInformationWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string DropDown(string connVMWCF) {
            return base.Channel.DropDown(connVMWCF);
        }
        
        public System.Threading.Tasks.Task<string> DropDownAsync(string connVMWCF) {
            return base.Channel.DropDownAsync(connVMWCF);
        }
        
        public string SelectAll(string CompanyID, string conditionFieldswcf, string conditionValueswcf, string connVMWCF) {
            return base.Channel.SelectAll(CompanyID, conditionFieldswcf, conditionValueswcf, connVMWCF);
        }
        
        public System.Threading.Tasks.Task<string> SelectAllAsync(string CompanyID, string conditionFieldswcf, string conditionValueswcf, string connVMWCF) {
            return base.Channel.SelectAllAsync(CompanyID, conditionFieldswcf, conditionValueswcf, connVMWCF);
        }
    }
}
